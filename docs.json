{
	"id": 0,
	"name": "parjs",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 276,
			"name": "parjs",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/GregoriR/OneDrive/Documents/GitHub/JavaScript/parjs/src/quiet.ts",
			"comment": {},
			"children": [
				{
					"id": 1244,
					"name": "ReplyKind",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Specifies a reply kind, indicating success or failure, and the severity of the failure."
					},
					"children": [
						{
							"id": 1250,
							"name": "Fail",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies any kind of failure."
							},
							"sources": [
								{
									"fileName": "reply.ts",
									"line": 69,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "HardFail",
										"id": 1248
									},
									{
										"type": "reference",
										"name": "FatalFail",
										"id": 1249
									},
									{
										"type": "reference",
										"name": "SoftFail",
										"id": 1247
									}
								]
							}
						},
						{
							"id": 1249,
							"name": "FatalFail",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The fatal failure type.\nA fatal failure reply."
							},
							"sources": [
								{
									"fileName": "reply.ts",
									"line": 43,
									"character": 25
								},
								{
									"fileName": "reply.ts",
									"line": 64,
									"character": 26
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "FatalFail"
							},
							"defaultValue": "\"FatalFail\""
						},
						{
							"id": 1248,
							"name": "HardFail",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The hard failure type.\nA hard failure reply."
							},
							"sources": [
								{
									"fileName": "reply.ts",
									"line": 39,
									"character": 24
								},
								{
									"fileName": "reply.ts",
									"line": 60,
									"character": 25
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "HardFail"
							},
							"defaultValue": "\"HardFail\""
						},
						{
							"id": 1246,
							"name": "OK",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The OK reply type.\nAn OK reply."
							},
							"sources": [
								{
									"fileName": "reply.ts",
									"line": 31,
									"character": 18
								},
								{
									"fileName": "reply.ts",
									"line": 52,
									"character": 19
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "OK"
							},
							"defaultValue": "\"OK\""
						},
						{
							"id": 1247,
							"name": "SoftFail",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The soft failure type.\nA soft failure reply."
							},
							"sources": [
								{
									"fileName": "reply.ts",
									"line": 35,
									"character": 24
								},
								{
									"fileName": "reply.ts",
									"line": 56,
									"character": 25
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "SoftFail"
							},
							"defaultValue": "\"SoftFail\""
						},
						{
							"id": 1245,
							"name": "Unknown",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "An Unknown reply. Used internally.\nAn Unknown reply."
							},
							"sources": [
								{
									"fileName": "reply.ts",
									"line": 27,
									"character": 23
								},
								{
									"fileName": "reply.ts",
									"line": 48,
									"character": 24
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "Unknown"
							},
							"defaultValue": "\"Unknown\""
						}
					],
					"groups": [
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								1250,
								1249,
								1248,
								1246,
								1247,
								1245
							]
						}
					],
					"sources": [
						{
							"fileName": "reply.ts",
							"line": 23,
							"character": 26
						},
						{
							"fileName": "reply.ts",
							"line": 74,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ReplyKind.OK",
								"id": 1246
							},
							{
								"type": "reference",
								"name": "ReplyKind.Fail",
								"id": 1250
							},
							{
								"type": "reference",
								"name": "ReplyKind.Unknown",
								"id": 1245
							}
						]
					}
				},
				{
					"id": 1231,
					"name": "ParsingFailureError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An error that is thrown when it is assumed a parser will succeed, but it fails."
					},
					"children": [
						{
							"id": 1232,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1234,
									"name": "new ParsingFailureError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1235,
											"name": "failure",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FailureReply",
												"id": 1219
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParsingFailureError",
										"id": 1231
									}
								}
							],
							"sources": [
								{
									"fileName": "parsing-failure.ts",
									"line": 10,
									"character": 48
								}
							]
						},
						{
							"id": 1233,
							"name": "failure",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "parsing-failure.ts",
									"line": 11,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "FailureReply",
								"id": 1219
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1232
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1233
							]
						}
					],
					"sources": [
						{
							"fileName": "parsing-failure.ts",
							"line": 10,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParsingFailureError",
							"id": 1231
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ParsingFailureError",
							"id": 1231
						}
					]
				},
				{
					"id": 1236,
					"name": "ParsingSuccessError",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1237,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1239,
									"name": "new ParsingSuccessError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1240,
											"name": "success",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SuccessReply",
												"id": 1210,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParsingSuccessError",
										"id": 1236
									}
								}
							],
							"sources": [
								{
									"fileName": "parsing-failure.ts",
									"line": 16,
									"character": 48
								}
							]
						},
						{
							"id": 1238,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "parsing-failure.ts",
									"line": 17,
									"character": 30
								}
							],
							"type": {
								"type": "reference",
								"name": "SuccessReply",
								"id": 1210,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "any"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1237
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1238
							]
						}
					],
					"sources": [
						{
							"fileName": "parsing-failure.ts",
							"line": 16,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParsingSuccessError",
							"id": 1236
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ParsingSuccessError",
							"id": 1236
						}
					]
				},
				{
					"id": 1386,
					"name": "AnyParser",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Common interface that unites parsers that produce values and ones that don't.",
						"tags": [
							{
								"tag": "see",
								"text": "LoudParser"
							},
							{
								"tag": "see",
								"text": "QuietParser\n"
							}
						]
					},
					"children": [
						{
							"id": 1388,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Exposes the internal parser action. This will generally contain the implementation of the parser instance."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 20,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "AnyParserAction",
								"id": 69
							}
						},
						{
							"id": 1387,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Exposes the display name of the parser. Userful when debugging."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 16,
									"character": 24
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 1396,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the parser results in a value. Parsers cannot change their loudness."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 45,
									"character": 19
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 1394,
							"name": "not",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. P will succeed if {this} fails hard or soft, and fail hard otherwise. P will still fail fatally if {this} fails fatally."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							}
						},
						{
							"id": 1393,
							"name": "q",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. If it succeeds, it will return nothing as a quiet parser."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 30,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							}
						},
						{
							"id": 1395,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}, and return the user state, discarding the result (if any)."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 40,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 1397,
							"name": "str",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this} and map the result to a string.\nThis is done differently depending on what {this} returns.\nFor an array (usually of strings), the elements are concatenated and returned as a single string.\nFor a string, the string is returned.\nFor a quiet parser, an empty string is returned.\nFor a number, it is turned into a string.\nFor a symbol, its description text is returned.\nFor an object, its toString method is invoked.\nFor null or undefined, the strings \"null\" or \"undefined\" are returned."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1389,
							"name": "result",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1390,
									"name": "result",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If {this} succeeds, P will discard its result (if any) and return {result} instead."
									},
									"typeParameter": [
										{
											"id": 1391,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1392,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to return.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "S"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "S"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "any.ts",
									"line": 25,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1388,
								1387,
								1396,
								1394,
								1393,
								1395,
								1397
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1389
							]
						}
					],
					"sources": [
						{
							"fileName": "any.ts",
							"line": 12,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "QuietParser",
							"id": 281
						},
						{
							"type": "reference",
							"name": "LoudParser",
							"id": 1258
						}
					]
				},
				{
					"id": 1258,
					"name": "LoudParser",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for parsers that produce result values of type  {T}",
						"tags": [
							{
								"tag": "see",
								"text": "QuietParser\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 1259,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1374,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Exposes the internal parser action. This will generally contain the implementation of the parser instance."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 20,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "AnyParserAction",
								"id": 69
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.action",
								"id": 1388
							}
						},
						{
							"id": 1296,
							"name": "backtrack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. If it succeeds, it will backtrack to the original position in the input, effectively succeeding without consuming input."
							},
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 89,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						},
						{
							"id": 1373,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Exposes the display name of the parser. Userful when debugging."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 16,
									"character": 24
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.displayName",
								"id": 1387
							}
						},
						{
							"id": 1382,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the parser results in a value. Parsers cannot change their loudness."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 45,
									"character": 19
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.isLoud",
								"id": 1396
							}
						},
						{
							"id": 1372,
							"name": "isolate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will wrap {this} in a nested parser construct.\nIt will apply {this} with an isolated parser state equal to the initial state. It will then return the value of {this}.\nHowever, the isolated parser state of {this} will be lost, so you must extract any information through the return value."
							},
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 261,
									"character": 20
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						},
						{
							"id": 1310,
							"name": "maybe",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						},
						{
							"id": 1380,
							"name": "not",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. P will succeed if {this} fails hard or soft, and fail hard otherwise. P will still fail fatally if {this} fails fatally."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.not",
								"id": 1394
							}
						},
						{
							"id": 1379,
							"name": "q",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. If it succeeds, it will return nothing as a quiet parser."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 30,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.q",
								"id": 1393
							}
						},
						{
							"id": 1291,
							"name": "soft",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this} and return the result. If {this} fails hard, P will fail soft. If {this} fails fatally, P will also fail fatally.\nIn other words, P will convert hard failures into soft ones."
							},
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 76,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						},
						{
							"id": 1381,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}, and return the user state, discarding the result (if any)."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 40,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.state",
								"id": 1395
							}
						},
						{
							"id": 1383,
							"name": "str",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this} and map the result to a string.\nThis is done differently depending on what {this} returns.\nFor an array (usually of strings), the elements are concatenated and returned as a single string.\nFor a string, the string is returned.\nFor a quiet parser, an empty string is returned.\nFor a number, it is turned into a string.\nFor a symbol, its description text is returned.\nFor an object, its toString method is invoked.\nFor null or undefined, the strings \"null\" or \"undefined\" are returned."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.str",
								"id": 1397
							}
						},
						{
							"id": 1301,
							"name": "act",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1302,
									"name": "act",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, and then call the specified function on the result."
									},
									"parameters": [
										{
											"id": 1303,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The action to call.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParjsProjection",
												"id": 1252,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "instrinct",
														"name": "void"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 102,
									"character": 7
								}
							]
						},
						{
							"id": 1330,
							"name": "between",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1331,
									"name": "between",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} between two other parsers, and return only the result of {this}.\nE.g.`x.between(a, b)` will apply parsers in the order: a, x, b; and return the result of x."
									},
									"parameters": [
										{
											"id": 1332,
											"name": "preceding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The preceding parser."
											},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										},
										{
											"id": 1333,
											"name": "proceeding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The proceeding parser.\n"
											},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 1334,
									"name": "between",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} between two appearances of the given parser, and return only the result of {this}.\nE.g. x.between(y) will apply parsers in the order: y, x, y."
									},
									"parameters": [
										{
											"id": 1335,
											"name": "precedingAndPreceding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parser that surrounds {this}.\n"
											},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 164,
									"character": 11
								},
								{
									"fileName": "loud.ts",
									"line": 171,
									"character": 11
								}
							]
						},
						{
							"id": 1304,
							"name": "cast",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1305,
									"name": "cast",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This method returns {this}, with the result statically typed as {S}.\nOnly makes sense in TypeScript."
									},
									"typeParameter": [
										{
											"id": 1306,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "S"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 108,
									"character": 8
								}
							]
						},
						{
							"id": 1354,
							"name": "exactly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1355,
									"name": "exactly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} exactly {count} times and return an array of the results.\nP will fail softly if {this} fails softly the 1st time, and it will fail hard if {this} fails softly afterwards."
									},
									"parameters": [
										{
											"id": 1356,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of times to apply {this}.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 218,
									"character": 11
								}
							]
						},
						{
							"id": 1357,
							"name": "many",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1358,
									"name": "many",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} repeatedly until it fails softly. P will return all the results in an array.\nP will fail hard only if {this} fails hard at any time it is applied."
									},
									"parameters": [
										{
											"id": 1359,
											"name": "minSuccess",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the minimum number of times {this} must succeed. If specified, if {this} succeeds fewer times, P will fail hard."
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 1360,
											"name": "maxIterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the maximum number of times {this} is applied. Defaults to Infinity.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 226,
									"character": 8
								}
							]
						},
						{
							"id": 1368,
							"name": "manySepBy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1369,
									"name": "manySepBy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} and then {delimeter} repeatedly, until either fails softly. It returns all the results of {this}.\nIf {this} fails softly after {delimeter} has succeeded, P will backtrack to before {delimeter} succeeded."
									},
									"parameters": [
										{
											"id": 1370,
											"name": "delimeter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The delimeter parser."
											},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										},
										{
											"id": 1371,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The maximum number of times {this} is applied.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 254,
									"character": 13
								}
							]
						},
						{
							"id": 1361,
							"name": "manyTill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1362,
									"name": "manyTill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} many times, until {till} succeeds, and then it will return the results of {this} in an array.",
										"text": "In more detail: P will apply {this}. If it succeeds, it will immediatly apply {till}. If {till} fails softly, P repeats.\nP fails hard if {this} or {till} fail hard.\nIf {this} fails before {till}, behavior is determined by the {tillOptional} parameter. By default, P will fail hard in this case too."
									},
									"parameters": [
										{
											"id": 1363,
											"name": "till",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parser that"
											},
											  "type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										},
										{
											"id": 1364,
											"name": "tillOptional",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "If true, P will stop applying {this} if it fails softly, thus behaving like the many() combinator.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										]
									}
								},
								{
									"id": 1365,
									"name": "manyTill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If it succeeds, it will pass its result to the {till} predicate. If it returns false, then P repeats.",
										"text": "This combinator behaves like the other version of manyTill, except that it applies a predicate instead of a parser."
									},
									"parameters": [
										{
											"id": 1366,
											"name": "till",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate that determines whether iterating {this} should be stopped."
											},
											"type": {
												"type": "reference",
												"name": "ParjsPredicate",
												"id": 1384,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 1367,
											"name": "tillOptional",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Whether it's okay for {this} to fail before {till} returns false.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 237,
									"character": 12
								},
								{
									"fileName": "loud.ts",
									"line": 246,
									"character": 12
								}
							]
						},
						{
							"id": 1297,
							"name": "map",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1298,
									"name": "map",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, and then apply the given projection on the result."
									},
									"typeParameter": [
										{
											"id": 1299,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1300,
											"name": "mapping",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The function to apply to the result.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParjsProjection",
												"id": 1252,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "S"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 96,
									"character": 7
								}
							]
						},
						{
							"id": 1307,
							"name": "mixState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1308,
									"name": "mixState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1309,
											"name": "userState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 110,
									"character": 12
								}
							]
						},
						{
							"id": 1311,
							"name": "must",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1312,
									"name": "must",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If it succeeds, P will apply the given predicate on the result.\nIf the predicate returns false, P will fail hard, or else with the failure kind specified by {fail}."
									},
									"parameters": [
										{
											"id": 1313,
											"name": "condition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate."
											},
											"type": {
												"type": "reference",
												"name": "ParjsPredicate",
												"id": 1384,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										},
										{
											"id": 1314,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the name of the condition the result must satisfy. For debugging purposes."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 1315,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the failure type emitted. Defaults to hard.\n"
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 126,
									"character": 8
								}
							]
						},
						{
							"id": 1316,
							"name": "mustBeNonEmpty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1317,
									"name": "mustBeNonEmpty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If it succeeds, P will check the result is not \"empty\", where an empty result means one of the following: null, undefined, \"\", [], {}.\nIf the result is empty, P will fail hard or according to the severity specified by {fail}."
									},
									"parameters": [
										{
											"id": 1318,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the failure kind. Defaults to hard.\n"
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 133,
									"character": 18
								}
							]
						},
						{
							"id": 1319,
							"name": "mustBeOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1320,
									"name": "mustBeOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If it succeeds, P will check the result is identical to one of the values specified in {options}.\nOtherwise, it will fail hard or with the severity specified by {fail}."
									},
									"parameters": [
										{
											"id": 1321,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The possible results."
											},
											"type": {
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										},
										{
											"id": 1322,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the failure kind. Defaults to hard.\n"
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 141,
									"character": 12
								}
							]
						},
						{
							"id": 1327,
							"name": "mustCapture",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1328,
									"name": "mustCapture",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If it succeeds, P will check {this} consumed at least one character of the input.\nOtherwise, it will fail hard or according to the severity specified by {fail}"
									},
									"parameters": [
										{
											"id": 1329,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The failure kind. Defaults to hard.\n"
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 156,
									"character": 15
								}
							]
						},
						{
							"id": 1323,
							"name": "mustNotBeOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1324,
									"name": "mustNotBeOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If it succeeds, P makes sure the result is not identical to any of those specified in {options}.\nOtherwise, it will fail hard or with the severity specified by {fail}.",
										"tags": [
											{
												"tag": "parma",
												"text": "fail Optionally, the failure kind. Defaults to hard.\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1325,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The prohibited results."
											},
											"type": {
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										},
										{
											"id": 1326,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 149,
									"character": 15
								}
							]
						},
						{
							"id": 1264,
							"name": "or",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1265,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Combinator.\nP will try to apply {this}. If {this} fails softly, P will backtrack to the original position and try to apply {second} instead.\nIf {second} fails softly, P will also fail softly."
									},
									"typeParameter": [
										{
											"id": 1266,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1267,
											"name": "second",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The alternative parser.\n"
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										]
									}
								},
								{
									"id": 1268,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Similar to other overloads. P will try two parsers after this one."
									},
									"typeParameter": [
										{
											"id": 1269,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1270,
											"name": "B",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1271,
											"name": "second",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 2nd parser to try, after {this}."
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "A"
													}
												]
											}
										},
										{
											"id": 1272,
											"name": "third",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 3rd parser to try, after the second one.\n"
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "B"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "A"
													},
													{
														"type": "typeParameter",
														"name": "B"
													}
												]
											}
										]
									}
								},
								{
									"id": 1273,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Similar to the other overloads. P will try three parsers after this one."
									},
									"typeParameter": [
										{
											"id": 1274,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1275,
											"name": "B",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1276,
											"name": "C",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1277,
											"name": "second",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 2nd parser to try."
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "A"
													}
												]
											}
										},
										{
											"id": 1278,
											"name": "third",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 3rd parser to try"
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "B"
													}
												]
											}
										},
										{
											"id": 1279,
											"name": "fourth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 4th parser to try\n"
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "C"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "A"
													},
													{
														"type": "typeParameter",
														"name": "B"
													},
													{
														"type": "typeParameter",
														"name": "C"
													}
												]
											}
										]
									}
								},
								{
									"id": 1280,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Similar to other overloads. P will try four parsers after this one."
									},
									"typeParameter": [
										{
											"id": 1281,
											"name": "A",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1282,
											"name": "B",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1283,
											"name": "C",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 1284,
											"name": "D",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1285,
											"name": "second",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 2nd parser."
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "A"
													}
												]
											}
										},
										{
											"id": 1286,
											"name": "third",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 3rd parser."
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "B"
													}
												]
											}
										},
										{
											"id": 1287,
											"name": "fourth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 4th parser."
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "C"
													}
												]
											}
										},
										{
											"id": 1288,
											"name": "fifth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The 5th parser.\n"
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "A"
													},
													{
														"type": "typeParameter",
														"name": "B"
													},
													{
														"type": "typeParameter",
														"name": "C"
													},
													{
														"type": "typeParameter",
														"name": "D"
													}
												]
											}
										]
									}
								},
								{
									"id": 1289,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P behaves like the other overloads, except that it will try a variable number of parsers specified in {parsers}."
									},
									"parameters": [
										{
											"id": 1290,
											"name": "parsers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "Zero or more parsers to try.\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 42,
									"character": 6
								},
								{
									"fileName": "loud.ts",
									"line": 48,
									"character": 6
								},
								{
									"fileName": "loud.ts",
									"line": 55,
									"character": 6
								},
								{
									"fileName": "loud.ts",
									"line": 64,
									"character": 6
								},
								{
									"fileName": "loud.ts",
									"line": 70,
									"character": 6
								}
							]
						},
						{
							"id": 1292,
							"name": "orVal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1293,
									"name": "orVal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} and returns its value. If it fails softly, P will succeed return {val}."
									},
									"typeParameter": [
										{
											"id": 1294,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1295,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value alternative.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "S"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 82,
									"character": 9
								}
							]
						},
						{
							"id": 1260,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},

							"signatures": [
								{
									"id": 1261,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Applies {this} on the given input string.",
										"tags": [
											{
												"tag": "group",
												"text": "Test!#!\n"
											}
										]
									},
									"parameters": [
										{
											"id": 1262,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The input string."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 1263,
											"name": "initialState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An object containing properties that are merged with this parse invocation's user state."
											},
											"type": {
												"type": "instrinct",
												"name": "object"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Reply",
										"id": 1242,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 32,
									"character": 9
								}
							]
						},
						{
							"id": 1375,
							"name": "result",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1376,
									"name": "result",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If {this} succeeds, P will discard its result (if any) and return {result} instead."
									},
									"typeParameter": [
										{
											"id": 1377,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1378,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to return.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "S"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "S"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AnyParser.result",
										"id": 1389
									}
								}
							],
							"sources": [
								{
									"fileName": "any.ts",
									"line": 25,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.result",
								"id": 1389
							}
						},
						{
							"id": 1336,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1337,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} and then immediately the given quiet parser. It will return the result of {this}.\nP will fail softly if {this} fails softly. P will fail hard if either parser fails hard or if the second parser fails softly."
									},
									"parameters": [
										{
											"id": 1338,
											"name": "quiet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The quiet parser to follow this one.\n"
											},
											"type": {
												"type": "reference",
												"name": "QuietParser",
												"id": 281
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								},
								{
									"id": 1339,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} and then immediately the given loud parser. If both succeed, it will return both results in an array.\nP will fail softly if {this} fails softly. P will fail hard if either parser fails hard or if the second parser fails softly."
									},
									"typeParameter": [
										{
											"id": 1340,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1341,
											"name": "loud",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The loud parser to follow this one.\n"
											},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "S"
													}
												]
											}
										]
									}
								},
								{
									"id": 1342,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} and then immediately a sequence of parsers, each either quiet or loud returning T.\nP will return an array consisting of all non-quiet results."
									},
									"parameters": [
										{
											"id": 1343,
											"name": "quietOrLoud",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The series of quiet or loud parsers.\n"
											},
											"type": {
												"type": "union",
												"isArray": true,
												"types": [
													{
														"type": "reference",
														"name": "QuietParser",
														"id": 281
													},
													{
														"type": "reference",
														"name": "LoudParser",
														"id": 1258,
														"typeArguments": [
															{
																"type": "unknown",
																"name": "T"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										]
									}
								},
								{
									"id": 1344,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, and then immediately a sequence of quiet parsers.\nP will return {this}'s result."
									},
									"parameters": [
										{
											"id": 1345,
											"name": "quiet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The sequence of quiet parsers.\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "QuietParser",
												"id": 281
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 179,
									"character": 8
								},
								{
									"fileName": "loud.ts",
									"line": 186,
									"character": 8
								},
								{
									"fileName": "loud.ts",
									"line": 194,
									"character": 8
								},
								{
									"fileName": "loud.ts",
									"line": 201,
									"character": 8
								}
							]
						},
						{
							"id": 1346,
							"name": "thenChoose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1347,
									"name": "thenChoose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "An advanced combinator.\nP will apply {this}, and then call the selector function with {this}'s return value. The function returns another parser.\nP will then apply that parser and return its result.\nBecause parser construction can be expensive, you can optionally provide a Map object which is used as a cache."
									},
									"typeParameter": [
										{
											"id": 1348,
											"name": "TParser",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "any"
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 1349,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The function that selects which parser to apply next."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1350,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1351,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1352,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "typeParameter",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "typeParameter",
																"name": "TParser",
																"constraint": {
																	"type": "reference",
																	"name": "LoudParser",
																	"id": 1258,
																	"typeArguments": [
																		{
																			"type": "instrinct",
																			"name": "any"
																		}
																	]
																}
															}
														}
													],
													"sources": [
														{
															"fileName": "loud.ts",
															"line": 211,
															"character": 58
														}
													]
												}
											}
										},
										{
											"id": 1353,
											"name": "cache",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An optional cache object.\n"
											},
											"type": {
												"type": "reference",
												"name": "Map",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "reference",
														"name": "AnyParser",
														"id": 1386
													}
												]
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "TParser",
										"constraint": {
											"type": "reference",
											"name": "LoudParser",
											"id": 1258,
											"typeArguments": [
												{
													"type": "instrinct",
													"name": "any"
												}
											]
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "loud.ts",
									"line": 211,
									"character": 14
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1374,
								1296,
								1373,
								1382,
								1372,
								1310,
								1380,
								1379,
								1291,
								1381,
								1383
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1301,
								1330,
								1304,
								1354,
								1357,
								1368,
								1361,
								1297,
								1307,
								1311,
								1316,
								1319,
								1327,
								1323,
								1264,
								1292,
								1260,
								1375,
								1336,
								1346
							]
						}
					],
					"sources": [
						{
							"fileName": "loud.ts",
							"line": 25,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AnyParser",
							"id": 1386
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ParjsParser",
							"id": 801
						}
					]
				},
				{
					"id": 1252,
					"name": "ParjsProjection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A projection on the parser result and the parser state."
					},
					"typeParameter": [
						{
							"id": 1253,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1254,
							"name": "TOut",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"signatures": [
						{
							"id": 1255,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "A projection on the parser result and the parser state."
							},
							"parameters": [
								{
									"id": 1256,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 1257,
									"name": "userState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "TOut"
							}
						}
					],
					"sources": [
						{
							"fileName": "loud.ts",
							"line": 12,
							"character": 32
						}
					]
				},
				{
					"id": 277,
					"name": "ParjsProjectionQuiet",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate over the user state, for parsers that don't produce results.",
						"tags": [
							{
								"tag": "see",
								"text": "ParjsProjection\n"
							}
						]
					},
					"typeParameter": [
						{
							"id": 278,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "A predicate over the user state, for parsers that don't produce results."
							},
							"parameters": [
								{
									"id": 280,
									"name": "userState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "quiet.ts",
							"line": 12,
							"character": 37
						}
					]
				},
				{
					"id": 360,
					"name": "ParjsStatic",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Namespace for static combinators and building-block parsers."
					},
					"children": [
						{
							"id": 363,
							"name": "anyChar",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single character and return it.  If it can't, it will fail softly."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 38,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 373,
							"name": "digit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single digit character [0-9] and return it. If it can't, it will fail soflty."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 62,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 397,
							"name": "eof",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will succeed if it has reached the end of the input, and fail softly otherwise."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 159,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							}
						},
						{
							"id": 361,
							"name": "helper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 24,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "ParjsStaticHelper",
								"id": 353
							}
						},
						{
							"id": 374,
							"name": "hex",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single hex digit character [0-9a-fA-F] and return it. If it can't, it will fail soflty."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 67,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 376,
							"name": "letter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single letter [a-zA-Z] and return it. If it can't, it will fail softly."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 77,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 375,
							"name": "lower",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single lower-case letter character in the range [a-z] and return it. If it can't, it will fail soflty."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 72,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 378,
							"name": "newline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse either \\n, \\r\\n, or \\r and return the string that was parsed. If it can't, it will fail softly."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 88,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 396,
							"name": "nop",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will succeed without consuming input. Quiet parser."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 154,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							}
						},
						{
							"id": 402,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will succeed without consuming input and return the current position in the input."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 173,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 407,
							"name": "rest",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse all the characters until the end of the input, and then return the parsed text.\nP will never fail."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 205,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 384,
							"name": "space",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse one ASCII inline space character, such as space or a tab, and return it.\nIf it can't, it will fail softly."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 118,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 405,
							"name": "spaces1",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse one or more ASCII whitespace character and returns the result.\nP will fail softly if it can't parse at least one space character."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 193,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 403,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will succeed without consuming input and return the current user state."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 178,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 383,
							"name": "uniDigit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single Unicode digit character in any script or language. It will return the string that was parsed."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 113,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 381,
							"name": "uniLetter",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single Unicode letter character in any script or language. It will return the string that was parsed."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 103,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 380,
							"name": "uniLower",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single Unicode lowercase character in any script or language. It will return the string that was parsed."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 99,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 379,
							"name": "uniNewline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single Unicode newline string, including characters as \\u2029 (PARAGRAPH SEPARATOR) that may indicate newlines. Returns the string that was parsed.\nIf it can't, it will fail softly."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 94,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 385,
							"name": "uniSpace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse one Unicode inline space character, including characters such as EM SPACE, and return the character that was parsed.\nIf it can't, it will fail softly."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 124,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 406,
							"name": "uniSpaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P parses as many Unicode inline white spaces as possible. Returns the parsed text.\nP will always succeed."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 199,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 382,
							"name": "uniUpper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single Unicode uppercase character in any script or language. It will return the string that was parsed."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 108,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 377,
							"name": "upper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse a single upper-case letter character in the range [A-Z] and return it. If it can't, it will fail softly."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 82,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 362,
							"name": "visualizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Used to visualize parsing errors in plain-text."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 31,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "TraceVisualizer",
								"id": 348
							}
						},
						{
							"id": 404,
							"name": "whitespaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will parse as many ASCII whitespace characters as possible, including any number of spaces, tabs, and newlines. Returns the parsed text.\nP will always succeed."
							},
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 187,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 426,
							"name": "any",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 427,
									"name": "any",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will try to apply the given parsers at the current position, one after the other, until one of them succeeds. It will return its result.\nP will fail softly if none of the parsers succeeds, and fail hard if any of them fails hard."
									},
									"parameters": [
										{
											"id": 428,
											"name": "pars",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The parsers.\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "LoudParser",
												"id": 1258,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "any"
											}
										]
									}
								},
								{
									"id": 429,
									"name": "any",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will try to apply the given parsers at the current position, one after the other, until one of them succeeds.\nP will fail soflty if none of the parsers succeeds, and fail hard if any of them fails hard."
									},
									"parameters": [
										{
											"id": 430,
											"name": "pars",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The quiet parsers to try.\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "QuietParser",
												"id": 281
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 251,
									"character": 7
								},
								{
									"fileName": "parjs.ts",
									"line": 258,
									"character": 7
								}
							]
						},
						{
							"id": 364,
							"name": "anyCharOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 365,
									"name": "anyCharOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will parse a single character that is part of the string {chars}, and then return it. If it can't, it will fail softly."
									},
									"parameters": [
										{
											"id": 366,
											"name": "chars",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The characters to match.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 44,
									"character": 13
								}
							]
						},
						{
							"id": 411,
							"name": "anyStringOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 412,
									"name": "anyStringOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will try to parse the strings in {strings} in order, and it will return the first one for which parsing succeeds.\nP will fail softly if none of the strings can be parsed."
									},
									"parameters": [
										{
											"id": 413,
											"name": "strings",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The strings.\n"
											},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 218,
									"character": 15
								}
							]
						},
						{
							"id": 370,
							"name": "charWhere",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 371,
									"name": "charWhere",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will parse a single character that matches the given predicate, and then it will return the character.  If it can't, it will fail softly."
									},
									"parameters": [
										{
											"id": 372,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate the character must fulfill.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParjsPredicate",
												"id": 1384,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 57,
									"character": 13
								}
							]
						},
						{
							"id": 398,
							"name": "fail",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 399,
									"name": "fail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will fail with the severity specified by {kind}, regardless of the input."
									},
									"parameters": [
										{
											"id": 400,
											"name": "expecting",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, a text indicating why the parser failed."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 401,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The failure kind. Defaults to hard.\n"
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 166,
									"character": 8
								}
							]
						},
						{
							"id": 389,
							"name": "float",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 390,
									"name": "float",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will parse a single floating point number according to the format options given in {options}, and return it in numeric form.\nP will fail softly if the input is not a floating point number, but it will fail hard if it suspects the input is a malformed floating point number.\nFor example, 1.0e+ will cause it to fail hard."
									},
									"parameters": [
										{
											"id": 391,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The floating point format options.\n"
											},
											"type": {
												"type": "reference",
												"name": "FloatOptions",
												"id": 234
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 140,
									"character": 9
								}
							]
						},
						{
							"id": 386,
							"name": "int",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 387,
									"name": "int",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will parse an integer according to the format options given in {options}, and return the integer that was parsed in numeric form.\nP will normally either succeed or fail softly, but some kinds of inputs will cause a hard failure, such as a sign without any digits after it."
									},
									"parameters": [
										{
											"id": 388,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The format of the integer.\n"
											},
											"type": {
												"type": "reference",
												"name": "IntOptions",
												"id": 260
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "number"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 132,
									"character": 7
								}
							]
						},
						{
							"id": 420,
							"name": "late",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 421,
									"name": "late",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The first time P is invoked, it will call {resolver} with no arguments and cache the result. From that point, it will act like the parser returned by {resolver}.\nThis late binding can be used to create certain kinds of recursive parsers."
									},
									"typeParameter": [
										{
											"id": 422,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 423,
											"name": "resolver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 424,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 425,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "LoudParser",
																"id": 1258,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "parjs.ts",
															"line": 244,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 244,
									"character": 8
								}
							]
						},
						{
							"id": 367,
							"name": "noCharOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 368,
									"name": "noCharOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will parse a single character that is not part of the string {chars}, and then return it.  If it can't, it will fail softly."
									},
									"parameters": [
										{
											"id": 369,
											"name": "chars",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The characters not to match.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 50,
									"character": 12
								}
							]
						},
						{
							"id": 417,
							"name": "regexp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 418,
									"name": "regexp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {regexp} starting at the current position. P will consume all the text from the current position to the end of the match.\nThe regexp starts matching at the current position.\nP will return the resulting match array, with return[0] being the entire match and return[n] being group n.\nP will fail softly if {regexp} failed."
									},
									"parameters": [
										{
											"id": 419,
											"name": "regexp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The regexp to apply.\n"
											},
											"type": {
												"type": "reference",
												"name": "RegExp"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"isArray": true,
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 234,
									"character": 10
								}
							]
						},
						{
							"id": 392,
							"name": "result",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 393,
									"name": "result",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will succeed without consuming input and return the given value."
									},
									"typeParameter": [
										{
											"id": 394,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 395,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to return.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 149,
									"character": 10
								}
							]
						},
						{
							"id": 431,
							"name": "seq",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 432,
									"name": "seq",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply the specified parsers in sequence and return the results in an array."
									},
									"parameters": [
										{
											"id": 433,
											"name": "parsers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The parser sequence.\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "AnyParser",
												"id": 1386
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"isArray": true,
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 264,
									"character": 7
								}
							]
						},
						{
							"id": 408,
							"name": "string",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 409,
									"name": "string",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will try to parse the string {str}. P will return the parsed string if it succeeds, and fail softly otherwise."
									},
									"parameters": [
										{
											"id": 410,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The string to parse.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 211,
									"character": 10
								}
							]
						},
						{
							"id": 414,
							"name": "stringLen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 415,
									"name": "stringLen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will parse exactly {length} characters and return the string that was parsed.\nP will fail softly if the input does not contain that many characters, and succeed otherwise."
									},
									"parameters": [
										{
											"id": 416,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of characters to parse.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "string"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 225,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								363,
								373,
								397,
								361,
								374,
								376,
								375,
								378,
								396,
								402,
								407,
								384,
								405,
								403,
								383,
								381,
								380,
								379,
								385,
								406,
								382,
								377,
								362,
								404
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								426,
								364,
								411,
								370,
								398,
								389,
								386,
								420,
								367,
								417,
								392,
								431,
								408,
								414
							]
						}
					],
					"sources": [
						{
							"fileName": "parjs.ts",
							"line": 22,
							"character": 28
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ParjsParsers",
							"id": 1092
						}
					]
				},
				{
					"id": 353,
					"name": "ParjsStaticHelper",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 354,
							"name": "isParser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 355,
									"name": "isParser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 356,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 14,
									"character": 12
								}
							]
						},
						{
							"id": 357,
							"name": "isParserAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 358,
									"name": "isParserAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 359,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "parjs.ts",
									"line": 16,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								354,
								357
							]
						}
					],
					"sources": [
						{
							"fileName": "parjs.ts",
							"line": 13,
							"character": 34
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ParjsHelper",
							"id": 1085
						}
					]
				},
				{
					"id": 281,
					"name": "QuietParser",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Interface for parsers that don't produce return values.",
						"tags": [
							{
								"tag": "see",
								"text": "LoudParser\n"
							}
						]
					},
					"children": [
						{
							"id": 336,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Exposes the internal parser action. This will generally contain the implementation of the parser instance."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 20,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "AnyParserAction",
								"id": 69
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.action",
								"id": 1388
							}
						},
						{
							"id": 297,
							"name": "backtrack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. If it succeeds, it will backtrack to the original position in the input, effectively succeeding without consuming input."
							},
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 65,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							}
						},
						{
							"id": 335,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Exposes the display name of the parser. Userful when debugging."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 16,
									"character": 24
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.displayName",
								"id": 1387
							}
						},
						{
							"id": 344,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether the parser results in a value. Parsers cannot change their loudness."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 45,
									"character": 19
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.isLoud",
								"id": 1396
							}
						},
						{
							"id": 342,
							"name": "not",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. P will succeed if {this} fails hard or soft, and fail hard otherwise. P will still fail fatally if {this} fails fatally."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.not",
								"id": 1394
							}
						},
						{
							"id": 341,
							"name": "q",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}. If it succeeds, it will return nothing as a quiet parser."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 30,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.q",
								"id": 1393
							}
						},
						{
							"id": 289,
							"name": "soft",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will try to apply {this}. If it fails hard, P will fail softly."
							},
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 45,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "QuietParser",
								"id": 281
							}
						},
						{
							"id": 343,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this}, and return the user state, discarding the result (if any)."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 40,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "any"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.state",
								"id": 1395
							}
						},
						{
							"id": 345,
							"name": "str",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "P will apply {this} and map the result to a string.\nThis is done differently depending on what {this} returns.\nFor an array (usually of strings), the elements are concatenated and returned as a single string.\nFor a string, the string is returned.\nFor a quiet parser, an empty string is returned.\nFor a number, it is turned into a string.\nFor a symbol, its description text is returned.\nFor an object, its toString method is invoked.\nFor null or undefined, the strings \"null\" or \"undefined\" are returned."
							},
							"sources": [
								{
									"fileName": "any.ts",
									"line": 58,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "LoudParser",
								"id": 1258,
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.str",
								"id": 1397
							}
						},
						{
							"id": 294,
							"name": "act",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 295,
									"name": "act",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, and then calls the specified function on the user state."
									},
									"parameters": [
										{
											"id": 296,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The function to call.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParjsProjectionQuiet",
												"id": 277,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "void"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 58,
									"character": 7
								}
							]
						},
						{
							"id": 332,
							"name": "exactly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 333,
									"name": "exactly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} exactly {count} times.\nP will fail softly if {this} fails softly the 1st time, and it will fail hard if {this} fails softly afterwards."
									},
									"parameters": [
										{
											"id": 334,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The number of times to apply {this}.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 143,
									"character": 11
								}
							]
						},
						{
							"id": 314,
							"name": "many",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 315,
									"name": "many",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} repeatedly, until it fails softly.\nP will fail hard if {this} fails hard at any time."
									},
									"parameters": [
										{
											"id": 316,
											"name": "minSuccess",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the minimum number of times {this} must succeed. If specified, if {this} succeeds fewer times, P will fail hard."
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 317,
											"name": "maxIterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optionally, the maximum number of times {this} will be applied.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 107,
									"character": 8
								}
							]
						},
						{
							"id": 328,
							"name": "manySepBy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 329,
									"name": "manySepBy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} and then {delimeter} repeatedly, until either fails softly.\nIf {this} fails softly after {delimeter} has succeeded, P will backtrack to before {delimeter} succeeded."
									},
									"parameters": [
										{
											"id": 330,
											"name": "delimeter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The delimeter parser."
											},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										},
										{
											"id": 331,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The maximum number of times {this} is applied.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 136,
									"character": 13
								}
							]
						},
						{
							"id": 321,
							"name": "manyTill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 322,
									"name": "manyTill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} repeatedly, until {till} succeeds.",
										"text": "In more detail: P will apply {this}. If it succeeds, it will immediatly apply {till}. If {till} fails softly, P repeats.\nP fails hard if {this} or {till} fail hard.\nIf {this} fails before {till}, behavior is determined by the {tillOptional} parameter. By default, P will fail hard in this case too."
									},
									"parameters": [
										{
											"id": 323,
											"name": "till",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parser that tells P to stop repeating {this}."
											},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										},
										{
											"id": 324,
											"name": "tillOptional",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "If true, P will stop applying {this} if it fails softly, thus behaving like the many() combinator.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								},
								{
									"id": 325,
									"name": "manyTill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If it succeeds, it will pass the user state to the {till} predicate. If it returns false, then P repeats.",
										"text": "This combinator behaves like the other version of manyTill, except that it applies a predicate instead of a parser."
									},
									"parameters": [
										{
											"id": 326,
											"name": "till",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate that determines whether iterating {this} should be stopped."
											},
											"type": {
												"type": "reference",
												"name": "ParjsPredicateQuiet",
												"id": 346
											}
										},
										{
											"id": 327,
											"name": "tillOptional",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Whether it's okay for {this} to fail softly before {till} returns false.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 120,
									"character": 12
								},
								{
									"fileName": "quiet.ts",
									"line": 128,
									"character": 12
								}
							]
						},
						{
							"id": 290,
							"name": "map",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 291,
									"name": "map",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this} and then call the given projection on the user state. P will then return the projection's result."
									},
									"typeParameter": [
										{
											"id": 292,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 293,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reference",
												"name": "ParjsProjectionQuiet",
												"id": 277,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 51,
									"character": 7
								}
							]
						},
						{
							"id": 318,
							"name": "mixState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 319,
									"name": "mixState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 320,
											"name": "userState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 109,
									"character": 12
								}
							]
						},
						{
							"id": 301,
							"name": "must",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 302,
									"name": "must",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, and then call the given predicate on the user state. If the predicate returns false, P will fail with the severity given by {fail}"
									},
									"parameters": [
										{
											"id": 303,
											"name": "condition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate."
											},
											"type": {
												"type": "reference",
												"name": "ParjsPredicateQuiet",
												"id": 346
											}
										},
										{
											"id": 304,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The failure severity.\n"
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 78,
									"character": 8
								}
							]
						},
						{
							"id": 298,
							"name": "mustCapture",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 299,
									"name": "mustCapture",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. P will fail hard, or with the severity specified by {fail}, if {this} did not consume at least one character of the input."
									},
									"parameters": [
										{
											"id": 300,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The failure kind. Defaults to hard.\n"
											},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 71,
									"character": 15
								}
							]
						},
						{
							"id": 286,
							"name": "or",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 287,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will try to apply {this}. If it fails softly, it will try to apply each parser in {alt} until one succeeds.\nP fails hard if any parser fails hard."
									},
									"parameters": [
										{
											"id": 288,
											"name": "alt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "The alternative parsers.\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "QuietParser",
												"id": 281
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 40,
									"character": 6
								}
							]
						},
						{
							"id": 282,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 283,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Applies {this} on the input, with the given initial state."
									},
									"parameters": [
										{
											"id": 284,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The input string."
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 285,
											"name": "initialState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The initial user state. The properties of this object are merged with those of the invocation's user state.\n"
											},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietReply",
										"id": 1243
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 31,
									"character": 9
								}
							]
						},
						{
							"id": 337,
							"name": "result",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 338,
									"name": "result",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}. If {this} succeeds, P will discard its result (if any) and return {result} instead."
									},
									"typeParameter": [
										{
											"id": 339,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 340,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The value to return.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "S"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "S"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "AnyParser.result",
										"id": 1389
									}
								}
							],
							"sources": [
								{
									"fileName": "any.ts",
									"line": 25,
									"character": 10
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "AnyParser.result",
								"id": 1389
							}
						},
						{
							"id": 305,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 306,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, followed by {second}. If both succeed, P will return the result of {second}, if any.\nP will fail soft if {this} fails softly, and it will fail hard otherwise (if {second} fails softly, or either parser fails hard)."
									},
									"typeParameter": [
										{
											"id": 307,
											"name": "TParser",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										}
									],
									"parameters": [
										{
											"id": 308,
											"name": "second",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parser to apply next.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "TParser",
												"constraint": {
													"type": "reference",
													"name": "AnyParser",
													"id": 1386
												}
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "TParser",
										"constraint": {
											"type": "reference",
											"name": "AnyParser",
											"id": 1386
										}
									}
								},
								{
									"id": 309,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, and then each quiet or loud parser in {parsers} in sequence.\nP will then return the results of all non-quiet parsers in an array.\nP will softly if {this} fails softly, and will fail hard otherwise."
									},
									"typeParameter": [
										{
											"id": 310,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 311,
											"name": "parsers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "union",
												"isArray": true,
												"types": [
													{
														"type": "reference",
														"name": "QuietParser",
														"id": 281
													},
													{
														"type": "reference",
														"name": "LoudParser",
														"id": 1258,
														"typeArguments": [
															{
																"type": "unknown",
																"name": "S"
															}
														]
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"isArray": true,
												"name": "S"
											}
										]
									}
								},
								{
									"id": 312,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "P will apply {this}, and then each quiet or loud parser in {quiet} in sequence.\nP will fail softly if {this} fails softly, and will fail hard otherwise."
									},
									"parameters": [
										{
											"id": 313,
											"name": "quiet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"comment": {
												"text": "A set of quiet parsers.\n"
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "QuietParser",
												"id": 281
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "QuietParser",
										"id": 281
									}
								}
							],
							"sources": [
								{
									"fileName": "quiet.ts",
									"line": 84,
									"character": 8
								},
								{
									"fileName": "quiet.ts",
									"line": 92,
									"character": 8
								},
								{
									"fileName": "quiet.ts",
									"line": 99,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								336,
								297,
								335,
								344,
								342,
								341,
								289,
								343,
								345
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								294,
								332,
								314,
								328,
								321,
								290,
								318,
								301,
								298,
								286,
								282,
								337,
								305
							]
						}
					],
					"sources": [
						{
							"fileName": "quiet.ts",
							"line": 25,
							"character": 28
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "AnyParser",
							"id": 1386
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ParjsParser",
							"id": 801
						}
					]
				},
				{
					"id": 1384,
					"name": "ParjsPredicate",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate on the parser result and the user state."
					},
					"sources": [
						{
							"fileName": "loud.ts",
							"line": 18,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ParjsProjection",
						"id": 1252,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							},
							{
								"type": "instrinct",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 346,
					"name": "ParjsPredicateQuiet",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A predicate over the user state, for parsers that don't produce results.",
						"tags": [
							{
								"tag": "see",
								"text": "ParjsPredicate\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "quiet.ts",
							"line": 19,
							"character": 31
						}
					],
					"type": {
						"type": "reference",
						"name": "ParjsProjectionQuiet",
						"id": 277,
						"typeArguments": [
							{
								"type": "instrinct",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 1243,
					"name": "QuietReply",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A type representing the reply of a quiet parser."
					},
					"sources": [
						{
							"fileName": "reply.ts",
							"line": 18,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "Reply",
						"id": 1242,
						"typeArguments": [
							{
								"type": "instrinct",
								"name": "void"
							}
						]
					}
				},
				{
					"id": 1242,
					"name": "Reply",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A type that represents a SuccessReply or a FailureReply. Returned by parsers."
					},
					"sources": [
						{
							"fileName": "reply.ts",
							"line": 12,
							"character": 17
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SuccessReply",
								"id": 1210,
								"typeArguments": [
									{
										"type": "unknown",
										"name": "T"
									}
								]
							},
							{
								"type": "reference",
								"name": "FailureReply",
								"id": 1219
							}
						]
					}
				},
				{
					"id": 1193,
					"name": "Parjs",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The central API of the parjs library. Contains building block parsers and static combinators."
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 20,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "ParjsStatic",
						"id": 360
					},
					"defaultValue": " new ParjsParsers() as ParjsStatic"
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						1244
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1231,
						1236
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1386,
						1258,
						1252,
						277,
						360,
						353,
						281
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1384,
						346,
						1243,
						1242
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1193
					]
				}
			],
			"sources": [
				{
					"fileName": "quiet.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "parjs/internal",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/GregoriR/OneDrive/Documents/GitHub/JavaScript/parjs/src/internal/implementation/special-results.ts",
			"comment": {},
			"children": [
				{
					"id": 1219,
					"name": "FailureReply",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1220,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1222,
									"name": "new FailureReply",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1223,
											"name": "trace",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Trace",
												"id": 1198
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "FailureReply",
										"id": 1219
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 51,
									"character": 53
								}
							]
						},
						{
							"id": 1221,
							"name": "trace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 52,
									"character": 28
								}
							],
							"type": {
								"type": "reference",
								"name": "Trace",
								"id": 1198
							}
						},
						{
							"id": 1226,
							"name": "kind",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1227,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "stringLiteral",
												"value": "HardFail"
											},
											{
												"type": "stringLiteral",
												"value": "FatalFail"
											},
											{
												"type": "stringLiteral",
												"value": "SoftFail"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 60,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "AnyReply.kind",
								"id": 1208
							}
						},
						{
							"id": 1224,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1225,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "never"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 56,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "AnyReply.value",
								"id": 1209
							}
						},
						{
							"id": 1228,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1229,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 64,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1220
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1221
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1226,
								1224
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1228
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/reply.ts",
							"line": 51,
							"character": 25
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyReply",
							"id": 1206,
							"typeArguments": [
								{
									"type": "instrinct",
									"name": "void"
								}
							]
						}
					]
				},
				{
					"id": 1082,
					"name": "NoUnicodeError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1083,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1084,
									"name": "new NoUnicodeError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "NoUnicodeError",
										"id": 1082
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 26,
									"character": 36
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1083
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/static.ts",
							"line": 26,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "NoUnicodeError",
							"id": 1082
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "NoUnicodeError",
							"id": 1082
						}
					]
				},
				{
					"id": 1085,
					"name": "ParjsHelper",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1086,
							"name": "isParser",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1087,
									"name": "isParser",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1088,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStaticHelper.isParser",
										"id": 355
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 62,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStaticHelper.isParser",
								"id": 354
							}
						},
						{
							"id": 1089,
							"name": "isParserAction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1090,
									"name": "isParserAction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1091,
											"name": "obj",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStaticHelper.isParserAction",
										"id": 358
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 66,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStaticHelper.isParserAction",
								"id": 357
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1086,
								1089
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/static.ts",
							"line": 61,
							"character": 24
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ParjsStaticHelper",
							"id": 353
						}
					]
				},
				{
					"id": 801,
					"name": "ParjsParser",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 890,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 892,
									"name": "new ParjsParser",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 893,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParjsAction",
												"id": 103
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseParjsParser.__constructor",
										"id": 727
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 42,
									"character": 39
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseParjsParser.__constructor",
								"id": 727
							}
						},
						{
							"id": 891,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 43,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "ParjsAction",
								"id": 103
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseParjsParser.action",
								"id": 728
							},
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.action",
								"id": 336
							}
						},
						{
							"id": 816,
							"name": "backtrack",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 817,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 45,
									"character": 17
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.backtrack",
								"id": 297
							}
						},
						{
							"id": 894,
							"name": "displayName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 895,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseParjsParser.displayName",
										"id": 731
									}
								}
							],
							"setSignature": [
								{
									"id": 896,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 897,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseParjsParser.displayName",
										"id": 731
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 45,
									"character": 19
								},
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 49,
									"character": 19
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseParjsParser.displayName",
								"id": 731
							},
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.displayName",
								"id": 335
							}
						},
						{
							"id": 902,
							"name": "isLoud",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 903,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseParjsParser.isLoud",
										"id": 739
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 94,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseParjsParser.isLoud",
								"id": 739
							},
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.isLoud",
								"id": 344
							}
						},
						{
							"id": 888,
							"name": "isolate",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 889,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 179,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.isolate",
								"id": 1372
							}
						},
						{
							"id": 821,
							"name": "maybe",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 822,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 53,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.maybe",
								"id": 1310
							}
						},
						{
							"id": 859,
							"name": "not",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 860,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 136,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.not",
								"id": 342
							}
						},
						{
							"id": 834,
							"name": "q",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 835,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 90,
									"character": 9
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.q",
								"id": 341
							}
						},
						{
							"id": 836,
							"name": "soft",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 837,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 94,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.soft",
								"id": 289
							}
						},
						{
							"id": 826,
							"name": "state",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 827,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 61,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.state",
								"id": 343
							}
						},
						{
							"id": 867,
							"name": "str",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 868,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 148,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.str",
								"id": 345
							}
						},
						{
							"id": 831,
							"name": "act",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 832,
									"name": "act",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 833,
											"name": "f",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 78,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.act",
								"id": 294
							}
						},
						{
							"id": 812,
							"name": "between",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 813,
									"name": "between",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 814,
											"name": "preceding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										},
										{
											"id": 815,
											"name": "proceeding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "LoudParser.between",
										"id": 1331
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 36,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.between",
								"id": 1330
							}
						},
						{
							"id": 864,
							"name": "cast",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 865,
									"name": "cast",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 866,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"type": {
										"type": "unknown",
										"name": "this"
									},
									"implementationOf": {
										"type": "reference",
										"name": "LoudParser.cast",
										"id": 1305
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 144,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.cast",
								"id": 1304
							}
						},
						{
							"id": 853,
							"name": "exactly",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 854,
									"name": "exactly",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 855,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "QuietParser.exactly",
										"id": 333
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 127,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.exactly",
								"id": 332
							}
						},
						{
							"id": 841,
							"name": "many",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 842,
									"name": "many",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 843,
											"name": "minSuccesses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 844,
											"name": "maxIters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": " Infinity"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "QuietParser.many",
										"id": 315
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 112,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.many",
								"id": 314
							}
						},
						{
							"id": 849,
							"name": "manySepBy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 850,
									"name": "manySepBy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 851,
											"name": "sep",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParser",
												"id": 1386
											}
										},
										{
											"id": 852,
											"name": "maxIterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											},
											"defaultValue": " Infinity"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 123,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.manySepBy",
								"id": 328
							}
						},
						{
							"id": 845,
							"name": "manyTill",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 846,
									"name": "manyTill",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 847,
											"name": "till",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "AnyParser",
														"id": 1386
													},
													{
														"type": "instrinct",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 848,
											"name": "tillOptional",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 116,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.manyTill",
								"id": 321
							}
						},
						{
							"id": 828,
							"name": "map",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 829,
									"name": "map",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 830,
											"name": "f",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 66,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.map",
								"id": 290
							}
						},
						{
							"id": 802,
							"name": "mixState",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 803,
									"name": "mixState",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 804,
											"name": "newState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "QuietParser.mixState",
										"id": 319
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 27,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.mixState",
								"id": 318
							}
						},
						{
							"id": 869,
							"name": "must",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 870,
									"name": "must",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 871,
											"name": "condition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										},
										{
											"id": 872,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											},
											"defaultValue": "\"(unnamed condition)\""
										},
										{
											"id": 873,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											},
											"defaultValue": " ReplyKind.HardFail"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "LoudParser.must",
										"id": 1312
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 152,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.must",
								"id": 301
							}
						},
						{
							"id": 882,
							"name": "mustBeNonEmpty",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 883,
									"name": "mustBeNonEmpty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 884,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "stringLiteral",
												"value": "HardFail"
											},
											"defaultValue": " ReplyKind.HardFail"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 168,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.mustBeNonEmpty",
								"id": 1316
							}
						},
						{
							"id": 878,
							"name": "mustBeOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 879,
									"name": "mustBeOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 880,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "any"
											}
										},
										{
											"id": 881,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "stringLiteral",
												"value": "HardFail"
											},
											"defaultValue": " ReplyKind.HardFail"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 164,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.mustBeOf",
								"id": 1319
							}
						},
						{
							"id": 818,
							"name": "mustCapture",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 819,
									"name": "mustCapture",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 820,
											"name": "failType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											},
											"defaultValue": " ReplyKind.HardFail"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "QuietParser.mustCapture",
										"id": 299
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 49,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.mustCapture",
								"id": 298
							}
						},
						{
							"id": 874,
							"name": "mustNotBeOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 875,
									"name": "mustNotBeOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 876,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "any"
											}
										},
										{
											"id": 877,
											"name": "fail",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "stringLiteral",
												"value": "HardFail"
											},
											"defaultValue": " ReplyKind.HardFail"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 160,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.mustNotBeOf",
								"id": 1323
							}
						},
						{
							"id": 823,
							"name": "or",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 824,
									"name": "or",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 825,
											"name": "others",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 57,
									"character": 6
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.or",
								"id": 286
							}
						},
						{
							"id": 861,
							"name": "orVal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 862,
									"name": "orVal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 863,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 140,
									"character": 9
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.orVal",
								"id": 1292
							}
						},
						{
							"id": 898,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 899,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 900,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 901,
											"name": "initialState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Reply",
										"id": 1242,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "any"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaseParjsParser.parse",
										"id": 735
									},
									"implementationOf": {
										"type": "reference",
										"name": "QuietParser.parse",
										"id": 283
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 53,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaseParjsParser.parse",
								"id": 735
							},
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.parse",
								"id": 282
							}
						},
						{
							"id": 856,
							"name": "result",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 857,
									"name": "result",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 858,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 132,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.result",
								"id": 337
							}
						},
						{
							"id": 838,
							"name": "then",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 839,
									"name": "then",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 840,
											"name": "next",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 98,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "QuietParser.then",
								"id": 305
							}
						},
						{
							"id": 805,
							"name": "thenChoose",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 806,
									"name": "thenChoose",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 807,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 808,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 809,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 810,
																	"name": "x",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "instrinct",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/instance.ts",
															"line": 32,
															"character": 25
														}
													]
												}
											}
										},
										{
											"id": 811,
											"name": "map",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Map",
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "any"
													},
													{
														"type": "instrinct",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 32,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "LoudParser.thenChoose",
								"id": 1346
							}
						},
						{
							"id": 885,
							"name": "withName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 886,
									"name": "withName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 887,
											"name": "newName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "unknown",
										"name": "this"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/instance.ts",
									"line": 174,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								890
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								891
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								816,
								894,
								902,
								888,
								821,
								859,
								834,
								836,
								826,
								867
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								831,
								812,
								864,
								853,
								841,
								849,
								845,
								828,
								802,
								869,
								882,
								878,
								818,
								874,
								823,
								861,
								898,
								856,
								838,
								805,
								885
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/instance.ts",
							"line": 26,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaseParjsParser",
							"id": 726
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "LoudParser",
							"id": 1258,
							"typeArguments": [
								{
									"type": "instrinct",
									"name": "any"
								}
							]
						},
						{
							"type": "reference",
							"name": "QuietParser",
							"id": 281
						}
					]
				},
				{
					"id": 1092,
					"name": "ParjsParsers",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1093,
							"name": "helper",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 72,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "ParjsHelper",
								"id": 1085
							},
							"defaultValue": " new ParjsHelper()",
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.helper",
								"id": 361
							}
						},
						{
							"id": 1094,
							"name": "visualizer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 73,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "BasicTraceVisualizer",
								"id": 1070
							},
							"defaultValue": " new BasicTraceVisualizer()",
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.visualizer",
								"id": 362
							}
						},
						{
							"id": 1111,
							"name": "anyChar",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1112,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 94,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.anyChar",
								"id": 363
							}
						},
						{
							"id": 1125,
							"name": "digit",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1126,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 115,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.digit",
								"id": 373
							}
						},
						{
							"id": 1170,
							"name": "eof",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1171,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 195,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.eof",
								"id": 397
							}
						},
						{
							"id": 1129,
							"name": "hex",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1130,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 123,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.hex",
								"id": 374
							}
						},
						{
							"id": 1103,
							"name": "letter",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1104,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 82,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.letter",
								"id": 376
							}
						},
						{
							"id": 1133,
							"name": "lower",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1134,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 131,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.lower",
								"id": 375
							}
						},
						{
							"id": 1139,
							"name": "newline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1140,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 143,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.newline",
								"id": 378
							}
						},
						{
							"id": 1151,
							"name": "nop",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1152,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 167,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.nop",
								"id": 396
							}
						},
						{
							"id": 1176,
							"name": "position",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1177,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 203,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.position",
								"id": 402
							}
						},
						{
							"id": 1153,
							"name": "rest",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1154,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 171,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.rest",
								"id": 407
							}
						},
						{
							"id": 1143,
							"name": "space",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1144,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 151,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.space",
								"id": 384
							}
						},
						{
							"id": 1095,
							"name": "spaces1",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1096,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 74,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.spaces1",
								"id": 405
							}
						},
						{
							"id": 1178,
							"name": "state",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1179,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 207,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.state",
								"id": 403
							}
						},
						{
							"id": 1127,
							"name": "uniDigit",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1128,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 119,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.uniDigit",
								"id": 383
							}
						},
						{
							"id": 1123,
							"name": "uniLetter",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1124,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 111,
									"character": 17
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.uniLetter",
								"id": 381
							}
						},
						{
							"id": 1131,
							"name": "uniLower",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1132,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 127,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.uniLower",
								"id": 380
							}
						},
						{
							"id": 1141,
							"name": "uniNewline",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1142,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 147,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.uniNewline",
								"id": 379
							}
						},
						{
							"id": 1145,
							"name": "uniSpace",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1146,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 155,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.uniSpace",
								"id": 385
							}
						},
						{
							"id": 1149,
							"name": "uniSpaces",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1150,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 163,
									"character": 17
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.uniSpaces",
								"id": 406
							}
						},
						{
							"id": 1137,
							"name": "uniUpper",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1138,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 139,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.uniUpper",
								"id": 382
							}
						},
						{
							"id": 1135,
							"name": "upper",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1136,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 135,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.upper",
								"id": 377
							}
						},
						{
							"id": 1147,
							"name": "whitespaces",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 1148,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 159,
									"character": 19
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.whitespaces",
								"id": 404
							}
						},
						{
							"id": 1105,
							"name": "any",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1106,
									"name": "any",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1107,
											"name": "parsers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "AnyParser",
												"id": 1386
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 86,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.any",
								"id": 426
							}
						},
						{
							"id": 1117,
							"name": "anyCharOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1118,
									"name": "anyCharOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1119,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.anyCharOf",
										"id": 365
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 102,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.anyCharOf",
								"id": 364
							}
						},
						{
							"id": 1158,
							"name": "anyStringOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1159,
									"name": "anyStringOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1160,
											"name": "strs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.anyStringOf",
										"id": 412
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 179,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.anyStringOf",
								"id": 411
							}
						},
						{
							"id": 1113,
							"name": "charWhere",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1114,
									"name": "charWhere",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1115,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParjsProjection",
												"id": 1252,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "string"
													},
													{
														"type": "instrinct",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 1116,
											"name": "property",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 98,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.charWhere",
								"id": 370
							}
						},
						{
							"id": 1172,
							"name": "fail",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1173,
									"name": "fail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1174,
											"name": "expecting",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											},
											"defaultValue": "\"\""
										},
										{
											"id": 1175,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind.Fail",
												"id": 1250
											},
											"defaultValue": " ReplyKind.SoftFail"
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.fail",
										"id": 399
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 199,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.fail",
								"id": 398
							}
						},
						{
							"id": 1183,
							"name": "float",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1184,
									"name": "float",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1185,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "FloatOptions",
												"id": 234
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.float",
										"id": 390
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 219,
									"character": 9
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.float",
								"id": 389
							}
						},
						{
							"id": 1180,
							"name": "int",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1181,
									"name": "int",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1182,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "IntOptions",
												"id": 260
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.int",
										"id": 387
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 211,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.int",
								"id": 386
							}
						},
						{
							"id": 1097,
							"name": "late",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1098,
									"name": "late",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 1099,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 1100,
											"name": "resolver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1101,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1102,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "LoudParser",
																"id": 1258,
																"typeArguments": [
																	{
																		"type": "typeParameter",
																		"name": "T"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/static.ts",
															"line": 78,
															"character": 22
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "LoudParser",
										"id": 1258,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 78,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.late",
								"id": 420
							}
						},
						{
							"id": 1120,
							"name": "noCharOf",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1121,
									"name": "noCharOf",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1122,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.noCharOf",
										"id": 368
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 106,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.noCharOf",
								"id": 367
							}
						},
						{
							"id": 1164,
							"name": "regexp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1165,
									"name": "regexp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1166,
											"name": "regex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RegExp"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.regexp",
										"id": 418
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 187,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.regexp",
								"id": 417
							}
						},
						{
							"id": 1167,
							"name": "result",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1168,
									"name": "result",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1169,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 191,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.result",
								"id": 392
							}
						},
						{
							"id": 1108,
							"name": "seq",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1109,
									"name": "seq",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1110,
											"name": "parsers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "AnyParser",
												"id": 1386
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.seq",
										"id": 432
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 90,
									"character": 7
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.seq",
								"id": 431
							}
						},
						{
							"id": 1155,
							"name": "string",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1156,
									"name": "string",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1157,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.string",
										"id": 409
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 175,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.string",
								"id": 408
							}
						},
						{
							"id": 1161,
							"name": "stringLen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1162,
									"name": "stringLen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1163,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ParjsParser",
										"id": 801
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParjsStatic.stringLen",
										"id": 415
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/static.ts",
									"line": 183,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParjsStatic.stringLen",
								"id": 414
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1093,
								1094
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								1111,
								1125,
								1170,
								1129,
								1103,
								1133,
								1139,
								1151,
								1176,
								1153,
								1143,
								1095,
								1178,
								1127,
								1123,
								1131,
								1141,
								1145,
								1149,
								1137,
								1135,
								1147
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1105,
								1117,
								1158,
								1113,
								1172,
								1183,
								1180,
								1097,
								1120,
								1164,
								1167,
								1108,
								1155,
								1161
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/static.ts",
							"line": 71,
							"character": 25
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ParjsStatic",
							"id": 360
						}
					]
				},
				{
					"id": 1210,
					"name": "SuccessReply",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Indicates a success reply and contains the value and other information."
					},
					"typeParameter": [
						{
							"id": 1211,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1213,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1215,
									"name": "new SuccessReply",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1216,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "SuccessReply",
										"id": 1210
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 40,
									"character": 24
								}
							]
						},
						{
							"id": 1212,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 40,
									"character": 8
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "OK"
							},
							"defaultValue": " ReplyKind.OK",
							"implementationOf": {
								"type": "reference",
								"name": "AnyReply.kind",
								"id": 1208
							}
						},
						{
							"id": 1214,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 41,
									"character": 28
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyReply.value",
								"id": 1209
							}
						},
						{
							"id": 1217,
							"name": "toString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1218,
									"name": "toString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 45,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1213
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1212,
								1214
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1217
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/reply.ts",
							"line": 39,
							"character": 25
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyReply",
							"id": 1206,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					]
				},
				{
					"id": 69,
					"name": "AnyParserAction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An interface for abstracting over parser actions."
					},
					"children": [
						{
							"id": 75,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The display name of the parser action."
							},
							"sources": [
								{
									"fileName": "internal/action.ts",
									"line": 29,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 74,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A general string that says what the parser action expects for the input."
							},
							"sources": [
								{
									"fileName": "internal/action.ts",
									"line": 25,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 73,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this parser action returns a value when it succeeds."
							},
							"sources": [
								{
									"fileName": "internal/action.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 70,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 71,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Applies the parser action on the parsing state."
									},
									"parameters": [
										{
											"id": 72,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The state on which to apply.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/action.ts",
									"line": 17,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								75,
								74,
								73
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								70
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/action.ts",
							"line": 12,
							"character": 32
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "ActParser",
							"id": 767
						},
						{
							"type": "reference",
							"name": "AnyStringOf",
							"id": 923
						},
						{
							"type": "reference",
							"name": "MapParser",
							"id": 520
						},
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						},
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						},
						{
							"type": "reference",
							"name": "PrsAltVal",
							"id": 692
						},
						{
							"type": "reference",
							"name": "PrsAlts",
							"id": 456
						},
						{
							"type": "reference",
							"name": "PrsBacktrack",
							"id": 470
						},
						{
							"type": "reference",
							"name": "PrsCharCodeWhere",
							"id": 1403
						},
						{
							"type": "reference",
							"name": "PrsCharWhere",
							"id": 908
						},
						{
							"type": "reference",
							"name": "PrsEof",
							"id": 990
						},
						{
							"type": "reference",
							"name": "PrsExactly",
							"id": 596
						},
						{
							"type": "reference",
							"name": "PrsFail",
							"id": 1001
						},
						{
							"type": "reference",
							"name": "PrsFloat",
							"id": 239
						},
						{
							"type": "reference",
							"name": "PrsInt",
							"id": 263
						},
						{
							"type": "reference",
							"name": "PrsIsolate",
							"id": 787
						},
						{
							"type": "reference",
							"name": "PrsLate",
							"id": 707
						},
						{
							"type": "reference",
							"name": "PrsMany",
							"id": 611
						},
						{
							"type": "reference",
							"name": "PrsManySepBy",
							"id": 627
						},
						{
							"type": "reference",
							"name": "PrsManyTill",
							"id": 643
						},
						{
							"type": "reference",
							"name": "PrsMapResult",
							"id": 539
						},
						{
							"type": "reference",
							"name": "PrsMust",
							"id": 499
						},
						{
							"type": "reference",
							"name": "PrsMustCapture",
							"id": 484
						},
						{
							"type": "reference",
							"name": "PrsNewline",
							"id": 1016
						},
						{
							"type": "reference",
							"name": "PrsNot",
							"id": 678
						},
						{
							"type": "reference",
							"name": "PrsPosition",
							"id": 1044
						},
						{
							"type": "reference",
							"name": "PrsQuiet",
							"id": 554
						},
						{
							"type": "reference",
							"name": "PrsRegexp",
							"id": 1030
						},
						{
							"type": "reference",
							"name": "PrsRest",
							"id": 951
						},
						{
							"type": "reference",
							"name": "PrsResult",
							"id": 976
						},
						{
							"type": "reference",
							"name": "PrsSeq",
							"id": 582
						},
						{
							"type": "reference",
							"name": "PrsSeqFunc",
							"id": 659
						},
						{
							"type": "reference",
							"name": "PrsSoft",
							"id": 753
						},
						{
							"type": "reference",
							"name": "PrsState",
							"id": 1055
						},
						{
							"type": "reference",
							"name": "PrsStr",
							"id": 568
						},
						{
							"type": "reference",
							"name": "PrsString",
							"id": 937
						},
						{
							"type": "reference",
							"name": "PrsStringLen",
							"id": 962
						}
					]
				},
				{
					"id": 1206,
					"name": "AnyReply",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Used to maintain common members between SuccessReply, FailureReply, and other reply types."
					},
					"typeParameter": [
						{
							"id": 1207,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 1208,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 32,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplyKind",
								"id": 1244
							}
						},
						{
							"id": 1209,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 33,
									"character": 18
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1208,
								1209
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/reply.ts",
							"line": 31,
							"character": 25
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "FailureReply",
							"id": 1219
						},
						{
							"type": "reference",
							"name": "SuccessReply",
							"id": 1210
						}
					]
				},
				{
					"id": 1195,
					"name": "ErrorLocation",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1197,
							"name": "column",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 1196,
							"name": "row",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 11,
									"character": 7
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1197,
								1196
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/reply.ts",
							"line": 10,
							"character": 30
						}
					]
				},
				{
					"id": 49,
					"name": "ParsingState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 56,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "If the result is a failure, this field will indicate the reason for the failure.\nIf the result is OK, this must be undefined."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 39,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 54,
							"name": "initialUserState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Initial user state."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 28,
									"character": 29
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						},
						{
							"id": 50,
							"name": "input",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The original string input on which parsing is performed. Should not be mutated while parsing."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 11,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 67,
							"name": "isFatal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Shorthand for this.result == FatalFailure"
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 64,
									"character": 20
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 66,
							"name": "isHard",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Shorthand for this.result == HardFailure"
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 60,
									"character": 19
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 64,
							"name": "isOk",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Shorthand for this.result == Okay"
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 52,
									"character": 17
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 65,
							"name": "isSoft",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Shorthand for this.result == SoftFailure"
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 56,
									"character": 19
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 57,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The result of the last parser action: OK, SoftFailure, HardFailure, FatalFailure."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 43,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplyKind",
								"id": 1244
							}
						},
						{
							"id": 51,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The next character waiting to be parsed."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 15,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 55,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "A stack that indicates entered parsers. Should not be modified by user code."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 33,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"isArray": true,
								"name": "AnyParserAction",
								"id": 69
							}
						},
						{
							"id": 53,
							"name": "userState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Additional state data."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 23,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						},
						{
							"id": 52,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "The value from the last parser action performed on this state."
							},
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 19,
									"character": 9
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						},
						{
							"id": 58,
							"name": "atLeast",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 59,
									"name": "atLeast",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 60,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind",
												"id": 1244
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 45,
									"character": 11
								}
							]
						},
						{
							"id": 61,
							"name": "atMost",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 62,
									"name": "atMost",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 63,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind",
												"id": 1244
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/state.ts",
									"line": 47,
									"character": 10
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								56,
								54,
								50,
								67,
								66,
								64,
								65,
								57,
								51,
								55,
								53,
								52
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								58,
								61
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/state.ts",
							"line": 7,
							"character": 29
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "BasicParsingState",
							"id": 77
						}
					]
				},
				{
					"id": 1198,
					"name": "Trace",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An object indicating trace information about the state of parsing when it was stopped."
					},
					"children": [
						{
							"id": 1205,
							"name": "input",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 25,
									"character": 9
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 1202,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 22,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplyKind.Fail",
								"id": 1250
							}
						},
						{
							"id": 1203,
							"name": "location",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "ErrorLocation",
								"id": 1195
							}
						},
						{
							"id": 1200,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 20,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						},
						{
							"id": 1201,
							"name": "reason",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						},
						{
							"id": 1204,
							"name": "stackTrace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 24,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"isArray": true,
								"name": "AnyParserAction",
								"id": 69
							}
						},
						{
							"id": 1199,
							"name": "userState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/reply.ts",
									"line": 19,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1205,
								1202,
								1203,
								1200,
								1201,
								1204,
								1199
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/reply.ts",
							"line": 18,
							"character": 22
						}
					]
				},
				{
					"id": 348,
					"name": "TraceVisualizer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "An object used to convert failure trace information into a plain-text visualization of an error"
					},
					"children": [
						{
							"id": 349,
							"name": "visualize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 350,
									"name": "visualize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 351,
											"name": "trace",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Trace",
												"id": 1198
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/visualizer.ts",
									"line": 10,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								349
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/visualizer.ts",
							"line": 9,
							"character": 32
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "BasicTraceVisualizer",
							"id": 1070
						}
					]
				},
				{
					"id": 1191,
					"name": "CharInfo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "internal/static.ts",
							"line": 59,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "StaticCharInfo"
					}
				},
				{
					"id": 1190,
					"name": "CodeInfo",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "internal/static.ts",
							"line": 58,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "StaticCodeInfo"
					}
				},
				{
					"id": 3,
					"name": "FAIL_RESULT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A unique object value indicating the reuslt of a failed parser."
					},
					"sources": [
						{
							"fileName": "internal/implementation/special-results.ts",
							"line": 12,
							"character": 24
						}
					],
					"type": {
						"type": "instrinct",
						"name": "any"
					},
					"defaultValue": " Object.create(null)"
				},
				{
					"id": 1189,
					"name": "InfoContainer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "internal/static.ts",
							"line": 32,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "InfoContainer"
					},
					"defaultValue": " new class InfoContainer {\r\n\tprivate _codeInfo : StaticCodeInfo = null;\r\n\tprivate _charInfo : StaticCharInfo = null;\r\n\tset CodeInfo(info) {\r\n\t\tthis._codeInfo = this._codeInfo || info;\r\n\t}\r\n\r\n\tset CharInfo(info) {\r\n\t\tthis._charInfo = this._charInfo || info;\r\n\t}\r\n\t\r\n\tget CodeInfo() {\r\n\t\tif (!this._codeInfo) {\r\n\t\t\tthrow new NoUnicodeError();\r\n\t\t}\r\n\t\treturn this._codeInfo\r\n\t}\r\n\r\n\tget CharInfo() {\r\n\t\tif (!this._charInfo) {\r\n\t\t\tthrow new NoUnicodeError();\r\n\t\t}\r\n\t\treturn this._charInfo;\r\n\t}\r\n}"
				},
				{
					"id": 2,
					"name": "QUIET_RESULT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A unique object value indicating the result of a quiet parser."
					},
					"sources": [
						{
							"fileName": "internal/implementation/special-results.ts",
							"line": 7,
							"character": 25
						}
					],
					"type": {
						"type": "instrinct",
						"name": "any"
					},
					"defaultValue": " Object.create(null)"
				},
				{
					"id": 4,
					"name": "UNINITIALIZED_RESULT",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A unique object value indicating that a parser did not initialize the ParsingState's value property before terminating, which is an error."
					},
					"sources": [
						{
							"fileName": "internal/implementation/special-results.ts",
							"line": 17,
							"character": 33
						}
					],
					"type": {
						"type": "instrinct",
						"name": "any"
					},
					"defaultValue": " Object.create(null)"
				},
				{
					"id": 1186,
					"name": "wrap",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 1187,
							"name": "wrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1188,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsAction",
										"id": 103
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ParjsParser",
								"id": 801
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/static.ts",
							"line": 22,
							"character": 13
						}
					]
				},
				{
					"id": 904,
					"name": "wrap",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 905,
							"name": "wrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 906,
									"name": "action",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParjsAction",
										"id": 103
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ParjsParser",
								"id": 801
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/instance.ts",
							"line": 22,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1219,
						1082,
						1085,
						801,
						1092,
						1210
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						69,
						1206,
						1195,
						49,
						1198,
						348
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1191,
						1190,
						3,
						1189,
						2,
						4
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1186,
						904
					]
				}
			],
			"sources": [
				{
					"fileName": "internal/implementation/special-results.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 32,
			"name": "parjs/internal/implementation",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/GregoriR/OneDrive/Documents/GitHub/JavaScript/parjs/src/internal/implementation/pretty.print/index.ts",
			"comment": {
				"shortText": "jkjkjkjk"
			},
			"children": [
				{
					"id": 435,
					"name": "Issues",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "external",
								"text": "\n"
							}
						]
					},
					"children": [
						{
							"id": 449,
							"name": "expectedFailureKind",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 450,
									"name": "expectedFailureKind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 451,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/issues.ts",
									"line": 28,
									"character": 39
								}
							]
						},
						{
							"id": 443,
							"name": "guardAgainstInfiniteLoop",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 444,
									"name": "guardAgainstInfiniteLoop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 445,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/issues.ts",
									"line": 20,
									"character": 44
								}
							]
						},
						{
							"id": 440,
							"name": "mixedLoudnessNotPermitted",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 441,
									"name": "mixedLoudnessNotPermitted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 442,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/issues.ts",
									"line": 16,
									"character": 45
								}
							]
						},
						{
							"id": 446,
							"name": "quietParserNotPermitted",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 447,
									"name": "quietParserNotPermitted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 448,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/issues.ts",
									"line": 24,
									"character": 43
								}
							]
						},
						{
							"id": 436,
							"name": "stringWrongLength",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 437,
									"name": "stringWrongLength",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 438,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 439,
											"name": "lengthHint",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/issues.ts",
									"line": 12,
									"character": 37
								}
							]
						},
						{
							"id": 452,
							"name": "willAlwaysFail",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 453,
									"name": "willAlwaysFail",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 454,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/issues.ts",
									"line": 32,
									"character": 34
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								449,
								443,
								440,
								446,
								436,
								452
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/issues.ts",
							"line": 10,
							"character": 23
						}
					]
				},
				{
					"id": 726,
					"name": "BaseParjsParser",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The base Parjs parser class, which supports only basic parsing operations. Should not be used in user code."
					},
					"children": [
						{
							"id": 727,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 729,
									"name": "new BaseParjsParser",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 730,
											"name": "action",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParjsAction",
												"id": 103
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BaseParjsParser",
										"id": 726
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 42,
									"character": 39
								}
							]
						},
						{
							"id": 728,
							"name": "action",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 43,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "ParjsAction",
								"id": 103
							}
						},
						{
							"id": 731,
							"name": "displayName",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 732,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"setSignature": [
								{
									"id": 733,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 734,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 45,
									"character": 19
								},
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 49,
									"character": 19
								}
							]
						},
						{
							"id": 739,
							"name": "isLoud",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 740,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 94,
									"character": 14
								}
							]
						},
						{
							"id": 735,
							"name": "parse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 736,
									"name": "parse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 737,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 738,
											"name": "initialState",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Reply",
										"id": 1242,
										"typeArguments": [
											{
												"type": "instrinct",
												"name": "any"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parser.ts",
									"line": 53,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								727
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								728
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								731,
								739
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								735
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parser.ts",
							"line": 42,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ParjsParser",
							"id": 801
						}
					]
				},
				{
					"id": 77,
					"name": "BasicParsingState",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Basic implementation of the ParsingState interface."
					},
					"children": [
						{
							"id": 85,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 87,
									"name": "new BasicParsingState",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 88,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "BasicParsingState",
										"id": 77
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 36,
									"character": 23
								}
							]
						},
						{
							"id": 84,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.expecting",
								"id": 56
							}
						},
						{
							"id": 80,
							"name": "initialUserState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 32,
									"character": 20
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " undefined",
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.initialUserState",
								"id": 54
							}
						},
						{
							"id": 86,
							"name": "input",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 38,
									"character": 28
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.input",
								"id": 50
							}
						},
						{
							"id": 83,
							"name": "kind",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 35,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "ReplyKind",
								"id": 1244
							},
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.kind",
								"id": 57
							}
						},
						{
							"id": 78,
							"name": "position",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 30,
									"character": 12
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"defaultValue": "0",
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.position",
								"id": 51
							}
						},
						{
							"id": 79,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 31,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "instrinct",
										"name": "any"
									}
								]
							},
							"defaultValue": " []",
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.stack",
								"id": 55
							}
						},
						{
							"id": 81,
							"name": "userState",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " undefined",
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.userState",
								"id": 53
							}
						},
						{
							"id": 82,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 34,
									"character": 9
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " undefined",
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.value",
								"id": 52
							}
						},
						{
							"id": 101,
							"name": "isFatal",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 102,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 62,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.isFatal",
								"id": 67
							}
						},
						{
							"id": 99,
							"name": "isHard",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 100,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 58,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.isHard",
								"id": 66
							}
						},
						{
							"id": 95,
							"name": "isOk",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 96,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 50,
									"character": 12
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.isOk",
								"id": 64
							}
						},
						{
							"id": 97,
							"name": "isSoft",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 98,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 54,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.isSoft",
								"id": 65
							}
						},
						{
							"id": 89,
							"name": "atLeast",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 90,
									"name": "atLeast",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 91,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind",
												"id": 1244
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParsingState.atLeast",
										"id": 59
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 42,
									"character": 11
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.atLeast",
								"id": 58
							}
						},
						{
							"id": 92,
							"name": "atMost",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 93,
									"name": "atMost",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 94,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind",
												"id": 1244
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "ParsingState.atMost",
										"id": 62
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 46,
									"character": 10
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "ParsingState.atMost",
								"id": 61
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								85
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								84,
								80,
								86,
								83,
								78,
								79,
								81,
								82
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								101,
								99,
								95,
								97
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								89,
								92
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/action.ts",
							"line": 29,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ParsingState",
							"id": 49
						}
					]
				},
				{
					"id": 1070,
					"name": "BasicTraceVisualizer",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1071,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1073,
									"name": "new BasicTraceVisualizer",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1074,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BasicTraceVisualizerArgs",
												"id": 1067
											},
											"defaultValue": " defaultArgs"
										}
									],
									"type": {
										"type": "reference",
										"name": "BasicTraceVisualizer",
										"id": 1070
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/basic-trace-visualizer.ts",
									"line": 20,
									"character": 61
								}
							]
						},
						{
							"id": 1072,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/basic-trace-visualizer.ts",
									"line": 21,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "BasicTraceVisualizerArgs",
								"id": 1067
							}
						},
						{
							"id": 1075,
							"name": "visualize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1076,
									"name": "visualize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1077,
											"name": "trace",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Trace",
												"id": 1198
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "TraceVisualizer.visualize",
										"id": 350
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/basic-trace-visualizer.ts",
									"line": 25,
									"character": 13
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "TraceVisualizer.visualize",
								"id": 349
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1071
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1072
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1075
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/basic-trace-visualizer.ts",
							"line": 20,
							"character": 33
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "TraceVisualizer",
							"id": 348
						}
					]
				},
				{
					"id": 103,
					"name": "ParjsAction",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A parsing action to perform. A parsing action is a fundamental operation that mutates a ParsingState."
					},
					"children": [
						{
							"id": 108,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 107,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 77,
									"character": 22
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 112,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Whether this action returns a value or not. Determines if the parser is loud or not."
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 120,
									"character": 19
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 104,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 105,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "The internal operation performed by the action. This will be overriden by derived classes."
									},
									"parameters": [
										{
											"id": 106,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "instrinct",
												"name": "void"
											},
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 76,
									"character": 29
								}
							]
						},
						{
							"id": 109,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 110,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 111,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								108,
								107,
								112
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								104,
								109
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/action.ts",
							"line": 70,
							"character": 33
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						},
						{
							"type": "reference",
							"name": "PrsFloat",
							"id": 239
						},
						{
							"type": "reference",
							"name": "PrsInt",
							"id": 263
						},
						{
							"type": "reference",
							"name": "PrsAlts",
							"id": 456
						},
						{
							"type": "reference",
							"name": "PrsBacktrack",
							"id": 470
						},
						{
							"type": "reference",
							"name": "PrsMustCapture",
							"id": 484
						},
						{
							"type": "reference",
							"name": "PrsMust",
							"id": 499
						},
						{
							"type": "reference",
							"name": "MapParser",
							"id": 520
						},
						{
							"type": "reference",
							"name": "PrsMapResult",
							"id": 539
						},
						{
							"type": "reference",
							"name": "PrsQuiet",
							"id": 554
						},
						{
							"type": "reference",
							"name": "PrsStr",
							"id": 568
						},
						{
							"type": "reference",
							"name": "PrsSeq",
							"id": 582
						},
						{
							"type": "reference",
							"name": "PrsExactly",
							"id": 596
						},
						{
							"type": "reference",
							"name": "PrsMany",
							"id": 611
						},
						{
							"type": "reference",
							"name": "PrsManySepBy",
							"id": 627
						},
						{
							"type": "reference",
							"name": "PrsManyTill",
							"id": 643
						},
						{
							"type": "reference",
							"name": "PrsSeqFunc",
							"id": 659
						},
						{
							"type": "reference",
							"name": "PrsNot",
							"id": 678
						},
						{
							"type": "reference",
							"name": "PrsAltVal",
							"id": 692
						},
						{
							"type": "reference",
							"name": "PrsLate",
							"id": 707
						},
						{
							"type": "reference",
							"name": "PrsSoft",
							"id": 753
						},
						{
							"type": "reference",
							"name": "ActParser",
							"id": 767
						},
						{
							"type": "reference",
							"name": "PrsIsolate",
							"id": 787
						},
						{
							"type": "reference",
							"name": "PrsNewline",
							"id": 1016
						},
						{
							"type": "reference",
							"name": "PrsPosition",
							"id": 1044
						},
						{
							"type": "reference",
							"name": "PrsState",
							"id": 1055
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 113,
					"name": "ParjsBasicAction",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Inherited by parser actions for basic parsers (e.g. string or numeric parsers), rather than combinators."
					},
					"children": [
						{
							"id": 119,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 118,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 77,
									"character": 22
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 114,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 115,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 116,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isPrivate": true
									},
									"comment": {
										"shortText": "The internal operation performed by the action. This will be overriden by derived classes."
									},
									"parameters": [
										{
											"id": 117,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "instrinct",
												"name": "void"
											},
											{
												"type": "instrinct",
												"name": "void"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 76,
									"character": 29
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 120,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 121,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 122,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								119,
								118,
								114
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								115,
								120
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/action.ts",
							"line": 126,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "PrsCharWhere",
							"id": 908
						},
						{
							"type": "reference",
							"name": "AnyStringOf",
							"id": 923
						},
						{
							"type": "reference",
							"name": "PrsString",
							"id": 937
						},
						{
							"type": "reference",
							"name": "PrsRest",
							"id": 951
						},
						{
							"type": "reference",
							"name": "PrsStringLen",
							"id": 962
						},
						{
							"type": "reference",
							"name": "PrsResult",
							"id": 976
						},
						{
							"type": "reference",
							"name": "PrsEof",
							"id": 990
						},
						{
							"type": "reference",
							"name": "PrsFail",
							"id": 1001
						},
						{
							"type": "reference",
							"name": "PrsRegexp",
							"id": 1030
						},
						{
							"type": "reference",
							"name": "PrsCharCodeWhere",
							"id": 1403
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 725,
					"name": "ParserUserState",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"sources": [
						{
							"fileName": "internal/implementation/parser.ts",
							"line": 35,
							"character": 21
						}
					]
				},
				{
					"id": 1067,
					"name": "BasicTraceVisualizerArgs",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 1068,
							"name": "lineNumbers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/basic-trace-visualizer.ts",
									"line": 12,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 1069,
							"name": "linesBefore",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/basic-trace-visualizer.ts",
									"line": 13,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1068,
								1069
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/basic-trace-visualizer.ts",
							"line": 11,
							"character": 41
						}
					]
				},
				{
					"id": 741,
					"name": "getErrorLocation",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 742,
							"name": "getErrorLocation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 743,
									"name": "ps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ParsingState",
										"id": 49
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 744,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 746,
											"name": "column",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "internal/implementation/parser.ts",
													"line": 30,
													"character": 14
												}
											],
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": " line === 0 ? position : lastPos - oldPos"
										},
										{
											"id": 745,
											"name": "row",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "internal/implementation/parser.ts",
													"line": 29,
													"character": 11
												}
											],
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": " line"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												746,
												745
											]
										}
									]
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parser.ts",
							"line": 12,
							"character": 25
						}
					]
				},
				{
					"id": 45,
					"name": "prettyPrint",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true,
						"isExternal": true
					},
					"signatures": [
						{
							"id": 46,
							"name": "prettyPrint",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {},
							"parameters": [
								{
									"id": 47,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/pretty.print/index.ts",
							"line": 68,
							"character": 27
						}
					]
				},
				{
					"id": 36,
					"name": "stringifyArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 37,
							"name": "stringifyArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 38,
									"name": "arr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"isArray": true,
										"name": "any"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/pretty.print/index.ts",
							"line": 33,
							"character": 23
						}
					]
				},
				{
					"id": 42,
					"name": "stringifyObj",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 43,
							"name": "stringifyObj",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 44,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/pretty.print/index.ts",
							"line": 54,
							"character": 21
						}
					]
				},
				{
					"id": 39,
					"name": "stringifyProps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 40,
							"name": "stringifyProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 41,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/pretty.print/index.ts",
							"line": 42,
							"character": 23
						}
					]
				},
				{
					"id": 33,
					"name": "stringifySimple",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 34,
							"name": "stringifySimple",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 35,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/pretty.print/index.ts",
							"line": 7,
							"character": 24
						}
					]
				},
				{
					"id": 123,
					"name": "worseThan",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 124,
							"name": "worseThan",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 125,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ReplyKind",
										"id": 1244
									}
								},
								{
									"id": 126,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ReplyKind",
										"id": 1244
									}
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/action.ts",
							"line": 11,
							"character": 18
						}
					]
				},
				{
					"id": 1078,
					"name": "defaultArgs",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {},
					"children": [
						{
							"id": 1079,
							"name": "lineNumbers",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "internal/implementation/basic-trace-visualizer.ts",
									"line": 17,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 1080,
							"name": "linesBefore",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "internal/implementation/basic-trace-visualizer.ts",
									"line": 18,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								1079,
								1080
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/basic-trace-visualizer.ts",
							"line": 16,
							"character": 17
						}
					],
					"type": {
						"type": "instrinct",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						435
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						726,
						77,
						1070,
						103,
						113,
						725
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1067
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						741,
						45,
						36,
						42,
						39,
						33,
						123
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						1078
					]
				}
			],
			"sources": [
				{
					"fileName": "internal/implementation/pretty.print/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 455,
			"name": "parjs/internal/implementation/combinators",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/GregoriR/OneDrive/Documents/GitHub/JavaScript/parjs/src/internal/implementation/combinators/alternatives/alts.ts",
			"comment": {},
			"children": [
				{
					"id": 767,
					"name": "ActParser",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 771,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 772,
									"name": "new ActParser",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 773,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParjsAction",
												"id": 103
											}
										},
										{
											"id": 774,
											"name": "act",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 775,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 776,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 777,
																	"name": "result",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																},
																{
																	"id": 778,
																	"name": "state",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "instrinct",
																"name": "void"
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/implementation/combinators/map/act.ts",
															"line": 15,
															"character": 58
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ActParser",
										"id": 767
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/act.ts",
									"line": 14,
									"character": 5
								}
							]
						},
						{
							"id": 782,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 768,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/act.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 769,
							"name": "isLoud",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isExported": true
							},
							"getSignature": [
								{
									"id": 770,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "instrinct",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction.isLoud",
										"id": 112
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/act.ts",
									"line": 12,
									"character": 14
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 779,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 780,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 781,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/act.ts",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 783,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 784,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 785,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								771
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								782,
								768
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								769
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								779,
								783
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/map/act.ts",
							"line": 9,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 520,
					"name": "MapParser",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 523,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 524,
									"name": "new MapParser",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 525,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParjsAction",
												"id": 103
											}
										},
										{
											"id": 526,
											"name": "map",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 527,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 528,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 529,
																	"name": "x",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																},
																{
																	"id": 530,
																	"name": "y",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "instrinct",
																"name": "any"
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/implementation/combinators/map/map.ts",
															"line": 14,
															"character": 58
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "MapParser",
										"id": 520
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map.ts",
									"line": 13,
									"character": 23
								}
							]
						},
						{
							"id": 534,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 522,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 521,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 531,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 532,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 533,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map.ts",
									"line": 19,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 535,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 536,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 537,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								523
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								534,
								522,
								521
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								531,
								535
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/map/map.ts",
							"line": 10,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 692,
					"name": "PrsAltVal",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 695,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 696,
									"name": "new PrsAltVal",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 697,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 698,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsAltVal",
										"id": 692
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alt-val.ts",
									"line": 14,
									"character": 23
								}
							]
						},
						{
							"id": 702,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 694,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alt-val.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 693,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alt-val.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 699,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 700,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 701,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alt-val.ts",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 703,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 704,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 705,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								695
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								702,
								694,
								693
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								699,
								703
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/alternatives/alt-val.ts",
							"line": 11,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 456,
					"name": "PrsAlts",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 459,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 460,
									"name": "new PrsAlts",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 461,
											"name": "alts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsAlts",
										"id": 456
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alts.ts",
									"line": 13,
									"character": 23
								}
							]
						},
						{
							"id": 465,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 458,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alts.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 457,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alts.ts",
									"line": 11,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 462,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 463,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 464,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/alts.ts",
									"line": 25,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 466,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 467,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 468,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								459
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								465,
								458,
								457
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								462,
								466
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/alternatives/alts.ts",
							"line": 10,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 470,
					"name": "PrsBacktrack",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 473,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 474,
									"name": "new PrsBacktrack",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 475,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsBacktrack",
										"id": 470
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/backtrack/backtrack.ts",
									"line": 10,
									"character": 23
								}
							]
						},
						{
							"id": 479,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 472,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/backtrack/backtrack.ts",
									"line": 10,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 471,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/backtrack/backtrack.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 476,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 477,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 478,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/backtrack/backtrack.ts",
									"line": 17,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 480,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 481,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 482,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								473
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								479,
								472,
								471
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								476,
								480
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/backtrack/backtrack.ts",
							"line": 7,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 596,
					"name": "PrsExactly",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 599,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 600,
									"name": "new PrsExactly",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 601,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 602,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsExactly",
										"id": 596
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/exactly.ts",
									"line": 16,
									"character": 23
								}
							]
						},
						{
							"id": 606,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 598,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/exactly.ts",
									"line": 16,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 597,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/exactly.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 603,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 604,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 605,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/exactly.ts",
									"line": 23,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 607,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 608,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 609,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								599
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								606,
								598,
								597
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								603,
								607
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/sequential/exactly.ts",
							"line": 13,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 787,
					"name": "PrsIsolate",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by lifeg on 24/03/2017."
					},
					"children": [
						{
							"id": 790,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 791,
									"name": "new PrsIsolate",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 792,
											"name": "_inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsIsolate",
										"id": 787
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/isolate.ts",
									"line": 13,
									"character": 22
								}
							]
						},
						{
							"id": 796,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 789,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/isolate.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 788,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/isolate.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 793,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 794,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 795,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/isolate.ts",
									"line": 18,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 797,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 798,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 799,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								790
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								796,
								789,
								788
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								793,
								797
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/special/isolate.ts",
							"line": 11,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 707,
					"name": "PrsLate",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by lifeg on 24/03/2017."
					},
					"children": [
						{
							"id": 710,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 712,
									"name": "new PrsLate",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 713,
											"name": "_resolver",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 714,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 715,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "AnyParserAction",
																"id": 69
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/implementation/combinators/special/late.ts",
															"line": 14,
															"character": 34
														}
													]
												}
											}
										},
										{
											"id": 716,
											"name": "isLoud",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsLate",
										"id": 707
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/late.ts",
									"line": 13,
									"character": 40
								}
							]
						},
						{
							"id": 708,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/late.ts",
									"line": 11,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"defaultValue": "\"late (unbound)\"",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 709,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/late.ts",
									"line": 12,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 711,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/late.ts",
									"line": 14,
									"character": 71
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 717,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 718,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 719,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/late.ts",
									"line": 18,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 720,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 721,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 722,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								710
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								708,
								709,
								711
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								717,
								720
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/special/late.ts",
							"line": 10,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 611,
					"name": "PrsMany",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 614,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 615,
									"name": "new PrsMany",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 616,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 617,
											"name": "maxIterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 618,
											"name": "minSuccesses",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsMany",
										"id": 611
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/many.ts",
									"line": 17,
									"character": 23
								}
							]
						},
						{
							"id": 622,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 613,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/many.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 612,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/many.ts",
									"line": 15,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 619,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 620,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 621,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/many.ts",
									"line": 25,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 623,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 624,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 625,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								614
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								622,
								613,
								612
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								619,
								623
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/sequential/many.ts",
							"line": 14,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 627,
					"name": "PrsManySepBy",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 630,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 631,
									"name": "new PrsManySepBy",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 632,
											"name": "many",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 633,
											"name": "sep",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 634,
											"name": "maxIterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsManySepBy",
										"id": 627
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manySepBy.ts",
									"line": 17,
									"character": 23
								}
							]
						},
						{
							"id": 638,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 629,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manySepBy.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 628,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manySepBy.ts",
									"line": 15,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 635,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 636,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 637,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manySepBy.ts",
									"line": 24,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 639,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 640,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 641,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								630
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								638,
								629,
								628
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								635,
								639
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/sequential/manySepBy.ts",
							"line": 14,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 643,
					"name": "PrsManyTill",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 646,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 647,
									"name": "new PrsManyTill",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 648,
											"name": "many",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 649,
											"name": "till",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 650,
											"name": "tillOptional",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsManyTill",
										"id": 643
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manyTill.ts",
									"line": 17,
									"character": 23
								}
							]
						},
						{
							"id": 654,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 645,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manyTill.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 644,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manyTill.ts",
									"line": 15,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 651,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 652,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 653,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/manyTill.ts",
									"line": 24,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 655,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 656,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 657,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								646
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								654,
								645,
								644
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								651,
								655
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/sequential/manyTill.ts",
							"line": 14,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 539,
					"name": "PrsMapResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by lifeg on 24/11/2016."
					},
					"children": [
						{
							"id": 542,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 543,
									"name": "new PrsMapResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 544,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 545,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsMapResult",
										"id": 539
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map-result.ts",
									"line": 13,
									"character": 23
								}
							]
						},
						{
							"id": 549,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 541,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map-result.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 540,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map-result.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 546,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 547,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 548,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/map-result.ts",
									"line": 19,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 550,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 551,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 552,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								542
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								549,
								541,
								540
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								546,
								550
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/map/map-result.ts",
							"line": 10,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 499,
					"name": "PrsMust",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 502,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 503,
									"name": "new PrsMust",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 504,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 505,
											"name": "requirement",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 506,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 507,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 508,
																	"name": "result",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																},
																{
																	"id": 509,
																	"name": "state",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "instrinct",
																"name": "boolean"
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/implementation/combinators/invariant/require.ts",
															"line": 17,
															"character": 29
														}
													]
												}
											}
										},
										{
											"id": 510,
											"name": "failType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										},
										{
											"id": 511,
											"name": "qualityName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsMust",
										"id": 499
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require.ts",
									"line": 14,
									"character": 23
								}
							]
						},
						{
							"id": 515,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 501,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 500,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 512,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 513,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 514,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require.ts",
									"line": 26,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 516,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 517,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 518,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								502
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								515,
								501,
								500
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								512,
								516
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/invariant/require.ts",
							"line": 12,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 484,
					"name": "PrsMustCapture",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 487,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "new PrsMustCapture",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 489,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 490,
											"name": "failType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind",
												"id": 1244
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsMustCapture",
										"id": 484
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require-capture.ts",
									"line": 14,
									"character": 23
								}
							]
						},
						{
							"id": 494,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 486,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require-capture.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 485,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require-capture.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 491,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 492,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 493,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/invariant/require-capture.ts",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 495,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 496,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 497,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								487
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								494,
								486,
								485
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								491,
								495
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/invariant/require-capture.ts",
							"line": 11,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 678,
					"name": "PrsNot",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 22-Nov-16."
					},
					"children": [
						{
							"id": 681,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 682,
									"name": "new PrsNot",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 683,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsNot",
										"id": 678
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/not.ts",
									"line": 15,
									"character": 23
								}
							]
						},
						{
							"id": 687,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 680,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/not.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 679,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/not.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "false",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 684,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 685,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 686,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/special/not.ts",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 688,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 689,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 690,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								681
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								687,
								680,
								679
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								684,
								688
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/special/not.ts",
							"line": 12,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 554,
					"name": "PrsQuiet",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by lifeg on 24/11/2016."
					},
					"children": [
						{
							"id": 557,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 558,
									"name": "new PrsQuiet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 559,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsQuiet",
										"id": 554
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/quiet.ts",
									"line": 14,
									"character": 23
								}
							]
						},
						{
							"id": 563,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 556,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/quiet.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 555,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/quiet.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "false",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 560,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 561,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 562,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/quiet.ts",
									"line": 20,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 564,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 565,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 566,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								557
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								563,
								556,
								555
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								560,
								564
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/map/quiet.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 582,
					"name": "PrsSeq",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 585,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 586,
									"name": "new PrsSeq",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 587,
											"name": "parsers",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"isArray": true,
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsSeq",
										"id": 582
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential.ts",
									"line": 15,
									"character": 23
								}
							]
						},
						{
							"id": 591,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 584,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 583,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 588,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 589,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 590,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ReplyKind",
										"id": 1244
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential.ts",
									"line": 24,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 592,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 593,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 594,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								585
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								591,
								584,
								583
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								588,
								592
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/sequential/sequential.ts",
							"line": 12,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 659,
					"name": "PrsSeqFunc",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 662,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 663,
									"name": "new PrsSeqFunc",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 664,
											"name": "initial",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										},
										{
											"id": 665,
											"name": "selector",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 666,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 667,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 668,
																	"name": "result",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "AnyParser",
																"id": 1386
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/implementation/combinators/sequential/sequential-func.ts",
															"line": 19,
															"character": 34
														}
													]
												}
											}
										},
										{
											"id": 669,
											"name": "cache",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Map",
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "any"
													},
													{
														"type": "reference",
														"name": "AnyParser",
														"id": 1386
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsSeqFunc",
										"id": 659
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential-func.ts",
									"line": 17,
									"character": 23
								}
							]
						},
						{
							"id": 673,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 661,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential-func.ts",
									"line": 17,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 660,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential-func.ts",
									"line": 15,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 670,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 671,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 672,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/sequential/sequential-func.ts",
									"line": 25,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 674,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 675,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 676,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								662
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								673,
								661,
								660
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								670,
								674
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/sequential/sequential-func.ts",
							"line": 14,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 753,
					"name": "PrsSoft",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 756,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 757,
									"name": "new PrsSoft",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 758,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsSoft",
										"id": 753
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/soft.ts",
									"line": 13,
									"character": 23
								}
							]
						},
						{
							"id": 762,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 755,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/soft.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 754,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/soft.ts",
									"line": 11,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 759,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 760,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 761,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/alternatives/soft.ts",
									"line": 20,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 763,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 764,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 765,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								756
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								762,
								755,
								754
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								759,
								763
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/alternatives/soft.ts",
							"line": 10,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 568,
					"name": "PrsStr",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 571,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 572,
									"name": "new PrsStr",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 573,
											"name": "inner",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyParserAction",
												"id": 69
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsStr",
										"id": 568
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/str.ts",
									"line": 15,
									"character": 23
								}
							]
						},
						{
							"id": 577,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 570,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/str.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 569,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/str.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 574,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 575,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 576,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/combinators/map/str.ts",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 578,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 579,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 580,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								571
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								577,
								570,
								569
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								574,
								578
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/combinators/map/str.ts",
							"line": 12,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						767,
						520,
						692,
						456,
						470,
						596,
						787,
						707,
						611,
						627,
						643,
						539,
						499,
						484,
						678,
						554,
						582,
						659,
						753,
						568
					]
				}
			],
			"sources": [
				{
					"fileName": "internal/implementation/combinators/alternatives/alts.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "parjs/internal/implementation/functions",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/GregoriR/OneDrive/Documents/GitHub/JavaScript/parjs/src/internal/implementation/functions/helpers.ts",
			"comment": {},
			"children": [
				{
					"id": 26,
					"name": "ArrayHelpers",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 27,
							"name": "maybePush",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 28,
									"name": "maybePush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 29,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 30,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"isArray": true,
												"name": "T"
											}
										},
										{
											"id": 31,
											"name": "what",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/helpers.ts",
									"line": 41,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								27
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/helpers.ts",
							"line": 40,
							"character": 29
						}
					]
				},
				{
					"id": 191,
					"name": "AsciiCharInfo",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 192,
							"name": "isAscii",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 193,
									"name": "isAscii",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 194,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 102,
									"character": 24
								}
							]
						},
						{
							"id": 216,
							"name": "isBinary",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 217,
									"name": "isBinary",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 218,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 135,
									"character": 25
								}
							]
						},
						{
							"id": 198,
							"name": "isDecimal",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 199,
									"name": "isDecimal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 200,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 111,
									"character": 26
								}
							]
						},
						{
							"id": 195,
							"name": "isHex",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 196,
									"name": "isHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 197,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 107,
									"character": 22
								}
							]
						},
						{
							"id": 201,
							"name": "isLetter",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 202,
									"name": "isLetter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 203,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 115,
									"character": 25
								}
							]
						},
						{
							"id": 207,
							"name": "isLower",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 208,
									"name": "isLower",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 209,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 123,
									"character": 24
								}
							]
						},
						{
							"id": 210,
							"name": "isNewline",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 211,
									"name": "isNewline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 212,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 127,
									"character": 26
								}
							]
						},
						{
							"id": 213,
							"name": "isSpace",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 214,
									"name": "isSpace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 131,
									"character": 24
								}
							]
						},
						{
							"id": 204,
							"name": "isUpper",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 205,
									"name": "isUpper",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 206,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 119,
									"character": 24
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								192,
								216,
								198,
								195,
								201,
								207,
								210,
								213,
								204
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/char-indicators.ts",
							"line": 101,
							"character": 27
						}
					]
				},
				{
					"id": 160,
					"name": "AsciiCodeInfo",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 161,
							"name": "isAscii",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 162,
									"name": "isAscii",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 163,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 56,
									"character": 24
								}
							]
						},
						{
							"id": 185,
							"name": "isBinary",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 186,
									"name": "isBinary",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 187,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 88,
									"character": 25
								}
							]
						},
						{
							"id": 167,
							"name": "isDecimal",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 168,
									"name": "isDecimal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 169,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 64,
									"character": 26
								}
							]
						},
						{
							"id": 164,
							"name": "isHex",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 165,
									"name": "isHex",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 166,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 60,
									"character": 22
								}
							]
						},
						{
							"id": 170,
							"name": "isLetter",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 171,
									"name": "isLetter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 172,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 68,
									"character": 25
								}
							]
						},
						{
							"id": 176,
							"name": "isLower",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 177,
									"name": "isLower",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 178,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 76,
									"character": 24
								}
							]
						},
						{
							"id": 179,
							"name": "isNewline",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 180,
									"name": "isNewline",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 181,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 80,
									"character": 26
								}
							]
						},
						{
							"id": 182,
							"name": "isSpace",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 183,
									"name": "isSpace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 184,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 84,
									"character": 24
								}
							]
						},
						{
							"id": 173,
							"name": "isUpper",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 174,
									"name": "isUpper",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 175,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 72,
									"character": 24
								}
							]
						},
						{
							"id": 188,
							"name": "isWordChar",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 189,
									"name": "isWordChar",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 190,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 92,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								161,
								185,
								167,
								164,
								170,
								176,
								179,
								182,
								173,
								188
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/char-indicators.ts",
							"line": 55,
							"character": 27
						}
					]
				},
				{
					"id": 128,
					"name": "Codes",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 133,
							"name": "A",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 11,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " 'A'.charCodeAt(0)"
						},
						{
							"id": 146,
							"name": "E",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 24,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " A + 4"
						},
						{
							"id": 131,
							"name": "F",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 9,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " 'F'.charCodeAt(0)"
						},
						{
							"id": 134,
							"name": "Z",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 12,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " 'Z'.charCodeAt(0)"
						},
						{
							"id": 129,
							"name": "a",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 7,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " 'a'.charCodeAt(0)"
						},
						{
							"id": 139,
							"name": "carriageReturn",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 17,
									"character": 31
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " '\\r'.charCodeAt(0)"
						},
						{
							"id": 144,
							"name": "decimalPoint",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 22,
									"character": 29
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " \".\".charCodeAt(0)"
						},
						{
							"id": 145,
							"name": "e",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 23,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " a + 4"
						},
						{
							"id": 130,
							"name": "f",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 8,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " 'f'.charCodeAt(0)"
						},
						{
							"id": 138,
							"name": "maxAnsi",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 16,
									"character": 24
								}
							],
							"type": {
								"type": "unknown",
								"name": "255"
							},
							"defaultValue": "255"
						},
						{
							"id": 142,
							"name": "minus",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 20,
									"character": 22
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " '-'.charCodeAt(0)"
						},
						{
							"id": 137,
							"name": "newline",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 15,
									"character": 24
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " '\\n'.charCodeAt(0)"
						},
						{
							"id": 136,
							"name": "nine",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 14,
									"character": 21
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " '9'.charCodeAt(0)"
						},
						{
							"id": 143,
							"name": "plus",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 21,
									"character": 21
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " '+'.charCodeAt(0)"
						},
						{
							"id": 140,
							"name": "space",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 18,
									"character": 22
								}
							],
							"type": {
								"type": "unknown",
								"name": "32"
							},
							"defaultValue": "32"
						},
						{
							"id": 141,
							"name": "tab",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 19,
									"character": 20
								}
							],
							"type": {
								"type": "unknown",
								"name": "8"
							},
							"defaultValue": "8"
						},
						{
							"id": 147,
							"name": "underscore",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 25,
									"character": 27
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " \"_\".charCodeAt(0)"
						},
						{
							"id": 132,
							"name": "z",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 10,
									"character": 18
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " 'z'.charCodeAt(0)"
						},
						{
							"id": 135,
							"name": "zero",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 13,
									"character": 21
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " '0'.charCodeAt(0)"
						},
						{
							"id": 157,
							"name": "digitValue",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 158,
									"name": "digitValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 159,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 41,
									"character": 30
								}
							]
						},
						{
							"id": 148,
							"name": "isBetween",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 149,
									"name": "isBetween",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 150,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 151,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 152,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 27,
									"character": 29
								}
							]
						},
						{
							"id": 153,
							"name": "isDigit",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 154,
									"name": "isDigit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 155,
											"name": "code",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 156,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											},
											"defaultValue": "10"
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/char-indicators.ts",
									"line": 31,
									"character": 27
								}
							]
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								133,
								146,
								131,
								134,
								129,
								139,
								144,
								145,
								130,
								138,
								142,
								137,
								136,
								143,
								140,
								141,
								147,
								132,
								135
							]
						},
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								157,
								148,
								153
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/char-indicators.ts",
							"line": 6,
							"character": 22
						}
					]
				},
				{
					"id": 220,
					"name": "FastMath",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 222,
							"name": "NegativeExponents",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/math.ts",
									"line": 8,
									"character": 34
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " _range(0, 36).map(b => b < 2 ? [] : _range(1, 256).map(n => Math.pow(b, -n)))"
						},
						{
							"id": 221,
							"name": "PositiveExponents",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/functions/math.ts",
									"line": 7,
									"character": 34
								}
							],
							"type": {
								"type": "instrinct",
								"name": "any"
							},
							"defaultValue": " _range(0, 36).map(b => b < 2 ? [] : _range(0, 256).map(e => Math.pow(b, e)))"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								222,
								221
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/math.ts",
							"line": 6,
							"character": 25
						}
					]
				},
				{
					"id": 20,
					"name": "NumHelpers",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 21,
							"name": "padInt",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 22,
									"name": "padInt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 23,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 24,
											"name": "digits",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 25,
											"name": "char",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/helpers.ts",
									"line": 33,
									"character": 26
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								21
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/helpers.ts",
							"line": 32,
							"character": 27
						}
					]
				},
				{
					"id": 748,
					"name": "Predicates",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"comment": {},
					"children": [
						{
							"id": 749,
							"name": "nonEmpty",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 750,
									"name": "nonEmpty",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 751,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/predicates.ts",
									"line": 6,
									"character": 28
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								749
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/predicates.ts",
							"line": 5,
							"character": 27
						}
					]
				},
				{
					"id": 6,
					"name": "StringHelpers",
					"kind": 2,
					"kindString": "Module",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 7,
							"name": "recJoin",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 8,
									"name": "recJoin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 9,
											"name": "arr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/helpers.ts",
									"line": 9,
									"character": 27
								}
							]
						},
						{
							"id": 10,
							"name": "splice",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 11,
									"name": "splice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 12,
											"name": "target",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 13,
											"name": "where",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 14,
											"name": "what",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/helpers.ts",
									"line": 17,
									"character": 26
								}
							]
						},
						{
							"id": 15,
							"name": "takeLines",
							"kind": 64,
							"kindString": "Function",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 16,
									"name": "takeLines",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 17,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										},
										{
											"id": 18,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										},
										{
											"id": 19,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/functions/helpers.ts",
									"line": 23,
									"character": 29
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"kind": 64,
							"children": [
								7,
								10,
								15
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/functions/helpers.ts",
							"line": 8,
							"character": 30
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						26,
						191,
						160,
						128,
						220,
						20,
						748,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "internal/implementation/functions/helpers.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 223,
			"name": "parjs/internal/implementation/parsers",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/GregoriR/OneDrive/Documents/GitHub/JavaScript/parjs/src/internal/implementation/parsers/numbers/parselets.ts",
			"comment": {},
			"children": [
				{
					"id": 923,
					"name": "AnyStringOf",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 926,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 927,
									"name": "new AnyStringOf",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 928,
											"name": "strs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"isArray": true,
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AnyStringOf",
										"id": 923
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/any-string-of.ts",
									"line": 10,
									"character": 23
								}
							]
						},
						{
							"id": 932,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 925,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/any-string-of.ts",
									"line": 10,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 924,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/any-string-of.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 929,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 930,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 931,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/any-string-of.ts",
									"line": 16,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 933,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 934,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 935,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								926
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								932,
								925,
								924
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								929,
								933
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/string/any-string-of.ts",
							"line": 7,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 1403,
					"name": "PrsCharCodeWhere",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 24-Nov-16."
					},
					"children": [
						{
							"id": 1406,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1407,
									"name": "new PrsCharCodeWhere",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1408,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1409,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1410,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1411,
																	"name": "char",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "instrinct",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "instrinct",
																"name": "boolean"
															}
														}
													],
													"sources": [
														{
															"fileName": "internal/implementation/parsers/char/char-code-where.ts",
															"line": 15,
															"character": 35
														}
													]
												}
											}
										},
										{
											"id": 1412,
											"name": "property",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											},
											"defaultValue": "\"(a specific property)\""
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsCharCodeWhere",
										"id": 1403
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-code-where.ts",
									"line": 14,
									"character": 23
								}
							]
						},
						{
							"id": 1416,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 1405,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-code-where.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 1404,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-code-where.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 1413,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1414,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1415,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-code-where.ts",
									"line": 20,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 1417,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1418,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 1419,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1406
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1416,
								1405,
								1404
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1413,
								1417
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/char/char-code-where.ts",
							"line": 11,
							"character": 29
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 908,
					"name": "PrsCharWhere",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 911,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 912,
									"name": "new PrsCharWhere",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 913,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParjsProjection",
												"id": 1252,
												"typeArguments": [
													{
														"type": "instrinct",
														"name": "string"
													},
													{
														"type": "instrinct",
														"name": "boolean"
													}
												]
											}
										},
										{
											"id": 914,
											"name": "expecting",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											},
											"defaultValue": "\"(some property)\""
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsCharWhere",
										"id": 908
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-where.ts",
									"line": 15,
									"character": 23
								}
							]
						},
						{
							"id": 918,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 910,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-where.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 909,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-where.ts",
									"line": 14,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 915,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 916,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 917,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/char/char-where.ts",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 919,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 920,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 921,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								911
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								918,
								910,
								909
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								915,
								919
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/char/char-where.ts",
							"line": 12,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 990,
					"name": "PrsEof",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by lifeg on 24/11/2016."
					},
					"children": [
						{
							"id": 996,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 992,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/eof.ts",
									"line": 15,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"defaultValue": "\"end of input\"",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 991,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/eof.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "false",
							"overwrites": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 993,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 994,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 995,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/eof.ts",
									"line": 16,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 997,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 998,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 999,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								996,
								992,
								991
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								993,
								997
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/primitives/eof.ts",
							"line": 12,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 1001,
					"name": "PrsFail",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by lifeg on 24/11/2016."
					},
					"children": [
						{
							"id": 1002,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1004,
									"name": "new PrsFail",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1005,
											"name": "kind",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReplyKind",
												"id": 1244
											}
										},
										{
											"id": 1006,
											"name": "expecting",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsFail",
										"id": 1001
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/fail.ts",
									"line": 12,
									"character": 47
								}
							]
						},
						{
							"id": 1011,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 1003,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isConstructorProperty": true,
								"isExported": true,
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/fail.ts",
									"line": 14,
									"character": 58
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 1010,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 1007,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1008,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1009,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/fail.ts",
									"line": 19,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 1012,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1013,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 1014,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1002
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1011,
								1003,
								1010
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1007,
								1012
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/primitives/fail.ts",
							"line": 12,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 239,
					"name": "PrsFloat",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 242,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 243,
									"name": "new PrsFloat",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 244,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "FloatOptions",
												"id": 234
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsFloat",
										"id": 239
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 36,
									"character": 18
								}
							]
						},
						{
							"id": 248,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 240,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 34,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"defaultValue": "\"a floating-point number\"",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 241,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 36,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 245,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 246,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 247,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 42,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 249,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 250,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 251,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								242
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								248,
								240,
								241
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								245,
								249
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/float.ts",
							"line": 33,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 263,
					"name": "PrsInt",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 266,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 267,
									"name": "new PrsInt",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 268,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IntOptions",
												"id": 260
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsInt",
										"id": 263
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/int.ts",
									"line": 27,
									"character": 23
								}
							]
						},
						{
							"id": 272,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 265,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/int.ts",
									"line": 27,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 264,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/int.ts",
									"line": 26,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 269,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 270,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 271,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/int.ts",
									"line": 35,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 273,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 274,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 275,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								266
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								272,
								265,
								264
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								269,
								273
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/int.ts",
							"line": 24,
							"character": 19
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 1016,
					"name": "PrsNewline",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 24-Nov-16."
					},
					"children": [
						{
							"id": 1019,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1020,
									"name": "new PrsNewline",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1021,
											"name": "unicodeMatcher",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "StaticCodeInfo"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsNewline",
										"id": 1016
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/newline.ts",
									"line": 16,
									"character": 23
								}
							]
						},
						{
							"id": 1025,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 1018,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/newline.ts",
									"line": 16,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 1017,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/newline.ts",
									"line": 15,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 1022,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1023,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1024,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/newline.ts",
									"line": 21,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 1026,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1027,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 1028,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1019
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1025,
								1018,
								1017
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1022,
								1026
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/string/newline.ts",
							"line": 13,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 1044,
					"name": "PrsPosition",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 27-Nov-16."
					},
					"children": [
						{
							"id": 1050,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 1046,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/special/position.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"defaultValue": "\"anything\"",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 1045,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/special/position.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 1047,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1048,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1049,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/special/position.ts",
									"line": 15,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 1051,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1052,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 1053,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1050,
								1046,
								1045
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1047,
								1051
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/special/position.ts",
							"line": 11,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 1030,
					"name": "PrsRegexp",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 24-Nov-16."
					},
					"children": [
						{
							"id": 1032,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1033,
									"name": "new PrsRegexp",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1034,
											"name": "regexp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RegExp"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsRegexp",
										"id": 1030
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/regexp.ts",
									"line": 13,
									"character": 23
								}
							]
						},
						{
							"id": 1039,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 1031,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/regexp.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 1038,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 1035,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1036,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1037,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/regexp.ts",
									"line": 22,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 1040,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1041,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 1042,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1032
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1039,
								1031,
								1038
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1035,
								1040
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/string/regexp.ts",
							"line": 11,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 951,
					"name": "PrsRest",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 957,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 953,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/rest.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"defaultValue": "\"zero or more characters\"",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 952,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/rest.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 954,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 955,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 956,
											"name": "pr",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/rest.ts",
									"line": 15,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 958,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 959,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 960,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								957,
								953,
								952
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								954,
								958
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/string/rest.ts",
							"line": 11,
							"character": 20
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 976,
					"name": "PrsResult",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 22-Nov-16."
					},
					"children": [
						{
							"id": 979,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 980,
									"name": "new PrsResult",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 981,
											"name": "result",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsResult",
										"id": 976
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/result.ts",
									"line": 13,
									"character": 27
								}
							]
						},
						{
							"id": 985,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 978,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/result.ts",
									"line": 13,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"defaultValue": "\"anything\"",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 977,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/result.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 982,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 983,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 984,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/primitives/result.ts",
									"line": 15,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 986,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 987,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 988,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								979
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								985,
								978,
								977
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								982,
								986
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/primitives/result.ts",
							"line": 10,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 1055,
					"name": "PrsState",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 27-Nov-16."
					},
					"children": [
						{
							"id": 1061,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 1057,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/special/state.ts",
									"line": 14,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"defaultValue": "\"anything\"",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 1056,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/special/state.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 1058,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1059,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1060,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/special/state.ts",
									"line": 15,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 1062,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 1063,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 1064,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1061,
								1057,
								1056
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1058,
								1062
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/special/state.ts",
							"line": 11,
							"character": 21
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsAction",
							"id": 103
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 937,
					"name": "PrsString",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 21-Nov-16."
					},
					"children": [
						{
							"id": 939,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 940,
									"name": "new PrsString",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 941,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsString",
										"id": 937
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/string.ts",
									"line": 12,
									"character": 23
								}
							]
						},
						{
							"id": 946,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 938,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/string.ts",
									"line": 12,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 945,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 942,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 943,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 944,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/string.ts",
									"line": 17,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 947,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 948,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 949,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								939
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								946,
								938,
								945
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								942,
								947
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/string/string.ts",
							"line": 10,
							"character": 22
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 962,
					"name": "PrsStringLen",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 22-Nov-16."
					},
					"children": [
						{
							"id": 964,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 965,
									"name": "new PrsStringLen",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 966,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "PrsStringLen",
										"id": 962
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/string-len.ts",
									"line": 12,
									"character": 23
								}
							]
						},
						{
							"id": 971,
							"name": "displayName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 78,
									"character": 15
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.displayName",
								"id": 108
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.displayName",
								"id": 75
							}
						},
						{
							"id": 963,
							"name": "expecting",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/string-len.ts",
									"line": 12,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.expecting",
								"id": 107
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.expecting",
								"id": 74
							}
						},
						{
							"id": 970,
							"name": "isLoud",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 127,
									"character": 10
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true",
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction.isLoud",
								"id": 112
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsBasicAction.isLoud",
								"id": 114
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.isLoud",
								"id": 73
							}
						},
						{
							"id": 967,
							"name": "_apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 968,
									"name": "_apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 969,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "ParjsAction._apply",
										"id": 104
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/string/string-len.ts",
									"line": 19,
									"character": 10
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "ParjsAction._apply",
								"id": 104
							}
						},
						{
							"id": 972,
							"name": "apply",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 973,
									"name": "apply",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform the action on the given ParsingState. This is a wrapper around a derived action's _apply method."
									},
									"parameters": [
										{
											"id": 974,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The parsing state.\n"
											},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "ParjsAction.apply",
										"id": 109
									},
									"implementationOf": {
										"type": "reference",
										"name": "AnyParserAction.apply",
										"id": 71
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/action.ts",
									"line": 84,
									"character": 9
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "ParjsAction.apply",
								"id": 109
							},
							"implementationOf": {
								"type": "reference",
								"name": "AnyParserAction.apply",
								"id": 70
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								964
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								971,
								963,
								970
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								967,
								972
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/string/string-len.ts",
							"line": 10,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "ParjsBasicAction",
							"id": 113
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "AnyParserAction",
							"id": 69
						}
					]
				},
				{
					"id": 224,
					"name": "_ParseletsType",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 29-Nov-16."
					},
					"children": [
						{
							"id": 225,
							"name": "parseDigitsInBase",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 226,
									"name": "parseDigitsInBase",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 227,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										},
										{
											"id": 228,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "instrinct",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/parselets.ts",
									"line": 13,
									"character": 21
								}
							]
						},
						{
							"id": 229,
							"name": "parseSign",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 230,
									"name": "parseSign",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Tries to parse a '+' or '-'. Returns the sign that was parsed, or 0 if the parsing failed.",
										"returns": "\n"
									},
									"parameters": [
										{
											"id": 231,
											"name": "ps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "ParsingState",
												"id": 49
											}
										}
									],
									"type": {
										"type": "instrinct",
										"name": "number"
									}
								}
							],
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/parselets.ts",
									"line": 32,
									"character": 13
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								225,
								229
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/parselets.ts",
							"line": 11,
							"character": 27
						}
					]
				},
				{
					"id": 234,
					"name": "FloatOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 238,
							"name": "allowExponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 21,
									"character": 17
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 237,
							"name": "allowFloatingPoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 20,
									"character": 22
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 236,
							"name": "allowImplicitZero",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 19,
									"character": 21
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 235,
							"name": "allowSign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 18,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								238,
								237,
								236,
								235
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/float.ts",
							"line": 17,
							"character": 29
						}
					]
				},
				{
					"id": 260,
					"name": "IntOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Created by User on 28-Nov-16."
					},
					"children": [
						{
							"id": 261,
							"name": "allowSign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/int.ts",
									"line": 20,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							}
						},
						{
							"id": 262,
							"name": "base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/int.ts",
									"line": 21,
									"character": 8
								}
							],
							"type": {
								"type": "instrinct",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								261,
								262
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/int.ts",
							"line": 19,
							"character": 27
						}
					]
				},
				{
					"id": 232,
					"name": "Parselets",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/parselets.ts",
							"line": 46,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"name": "_ParseletsType",
						"id": 224
					},
					"defaultValue": " new _ParseletsType()"
				},
				{
					"id": 258,
					"name": "msgExponentSign",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/float.ts",
							"line": 32,
							"character": 21
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "exponent sign (+ or -)"
					},
					"defaultValue": "\"exponent sign (+ or -)\""
				},
				{
					"id": 257,
					"name": "msgOneOrMoreDigits",
					"kind": 32,
					"kindString": "Variable",
					"flags": {},
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/float.ts",
							"line": 31,
							"character": 24
						}
					],
					"type": {
						"type": "stringLiteral",
						"value": "one or more digits"
					},
					"defaultValue": "\"one or more digits\""
				},
				{
					"id": 252,
					"name": "defaultFloatOptions",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {},
					"children": [
						{
							"id": 253,
							"name": "allowExponent",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 25,
									"character": 17
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 256,
							"name": "allowFloatingPoint",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 28,
									"character": 22
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 255,
							"name": "allowImplicitZero",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 27,
									"character": 21
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 254,
							"name": "allowSign",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "internal/implementation/parsers/numbers/float.ts",
									"line": 26,
									"character": 13
								}
							],
							"type": {
								"type": "instrinct",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								253,
								256,
								255,
								254
							]
						}
					],
					"sources": [
						{
							"fileName": "internal/implementation/parsers/numbers/float.ts",
							"line": 24,
							"character": 25
						}
					],
					"type": {
						"type": "instrinct",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						923,
						1403,
						908,
						990,
						1001,
						239,
						263,
						1016,
						1044,
						1030,
						951,
						976,
						1055,
						937,
						962,
						224
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						234,
						260
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						232,
						258,
						257
					]
				},
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						252
					]
				}
			],
			"sources": [
				{
					"fileName": "internal/implementation/parsers/numbers/parselets.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1398,
			"name": "parjs/unicode",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/GregoriR/OneDrive/Documents/GitHub/JavaScript/parjs/src/unicode.ts",
			"comment": {},
			"sources": [
				{
					"fileName": "unicode.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				276,
				1,
				32,
				455,
				5,
				223,
				1398
			]
		}
	]
}