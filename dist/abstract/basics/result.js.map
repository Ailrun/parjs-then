{"version":3,"sources":["abstract/basics/result.ts"],"names":[],"mappings":";AAmBA;;GAEG;AACH,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,iDAAO,CAAA;IACP,uCAAE,CAAA;IACF,mDAAQ,CAAA;IACR,mDAAQ,CAAA;IACR,qDAAS,CAAA;AACb,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB;AAMD,sBAA6B,SAAsC;IAC/D,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAChB,KAAK,WAAW;gBACZ,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;gBACjC,KAAK,CAAC;YACV,KAAK,UAAU;gBACX,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC;gBAChC,KAAK,CAAC;YACV,KAAK,UAAU;gBACX,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC;gBAChC,KAAK,CAAC;YACV;gBACI,SAAS,GAAG,UAAU,CAAC,OAAc,CAAC;gBACtC,KAAK,CAAC;QACd,CAAC;QACD,MAAM,CAAC,SAAuB,CAAC;IACnC,CAAC;IACD,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAnBD,oCAmBC","file":"result.js","sourcesContent":["/**\r\n * Created by lifeg on 24/11/2016.\r\n */\r\nimport _ = require('lodash');\r\nexport interface SuccessResult<T> {\r\n    kind : ResultKind.OK;\r\n    value : T;\r\n    state : any;\r\n}\r\n\r\nexport interface FailResult {\r\n    kind : ResultKind.FatalFail | ResultKind.SoftFail | ResultKind.HardFail;\r\n    state : any;\r\n    expecting : string;\r\n}\r\n\r\nexport type ParserResult<T> = SuccessResult<T> | FailResult;\r\n\r\nexport type QuietParserResult = ParserResult<void>;\r\n/**\r\n *\r\n */\r\nexport enum ResultKind {\r\n    Unknown,\r\n    OK,\r\n    SoftFail,\r\n    HardFail,\r\n    FatalFail\r\n}\r\n\r\nexport type FailIndicator =\r\n    ResultKind.SoftFail | ResultKind.HardFail | ResultKind.FatalFail |\r\n        \"SoftFail\" | \"HardFail\" | \"FatalFail\";\r\n\r\nexport function toResultKind(indicator : FailIndicator | ResultKind) : ResultKind {\r\n    if (typeof indicator !== 'number') {\r\n        switch (indicator) {\r\n            case \"FatalFail\":\r\n                indicator = ResultKind.FatalFail;\r\n                break;\r\n            case \"HardFail\":\r\n                indicator = ResultKind.HardFail;\r\n                break;\r\n            case \"SoftFail\":\r\n                indicator = ResultKind.SoftFail;\r\n                break;\r\n            default:\r\n                indicator = ResultKind.Unknown as any;\r\n                break;\r\n        }\r\n        return indicator as ResultKind;\r\n    }\r\n    return indicator;\r\n}"],"sourceRoot":"/src"}