{"version":3,"sources":["implementation/parsers/char/char-where.ts"],"names":[],"mappings":";;AAAA,+CAAmE;AAEnE,0DAA2D;AAC3D;;GAEG;AACH;IAAkC,wCAAgB;IAI9C,sBAAoB,SAAsC,EAAE,QAAqC;QAArC,yBAAA,EAAA,4BAAqC;QAAjG,YACI,iBAAO,SAEV;QAHmB,eAAS,GAAT,SAAS,CAA6B;QAH1D,iBAAW,GAAE,WAAW,CAAC;QACzB,YAAM,GAAG,IAAI,CAAC;QAIV,KAAI,CAAC,SAAS,GAAG,8BAA4B,QAAU,CAAC;;IAC5D,CAAC;IAED,6BAAM,GAAN,UAAO,EAAiB;QACf,IAAA,0BAAS,CAAS;QAClB,IAAA,sBAAQ,EAAE,gBAAK,CAAO;QAC3B,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,IAAI,GAAG,mBAAU,CAAC,QAAQ,CAAC;YAC9B,MAAM,CAAC;QACX,CAAC;QACD,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,IAAI,GAAI,mBAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;QACnB,EAAE,CAAC,QAAQ,EAAE,CAAC;QACd,EAAE,CAAC,IAAI,GAAG,mBAAU,CAAC,EAAE,CAAC;IAC5B,CAAC;IACL,mBAAC;AAAD,CAzBA,AAyBC,CAzBiC,yBAAgB,GAyBjD;AAzBY,oCAAY","file":"char-where.js","sourcesContent":["import {ParjsAction, ParjsBasicAction} from \"../../../base/action\";\r\nimport {ParsingState} from \"../../../abstract/basics/state\";\r\nimport {ResultKind} from \"../../../abstract/basics/result\";\r\n/**\r\n * Created by User on 21-Nov-16.\r\n */\r\nexport class PrsCharWhere extends ParjsBasicAction {\r\n    displayName =\"charWhere\";\r\n    isLoud = true;\r\n    expecting : string;\r\n    constructor(private predicate : (char : string) => boolean, property : string = \"(some property)\") {\r\n        super();\r\n        this.expecting = `any character satisfying ${property}`;\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {predicate} = this;\r\n        let {position, input} = ps;\r\n        if (position >= input.length) {\r\n            ps.kind = ResultKind.SoftFail;\r\n            return;\r\n        }\r\n        let curChar = input[position];\r\n        if (!predicate(curChar)) {\r\n            ps.kind =  ResultKind.SoftFail;\r\n            return;\r\n        }\r\n        ps.value = curChar;\r\n        ps.position++;\r\n        ps.kind = ResultKind.OK;\r\n    }\r\n}\r\n"],"sourceRoot":"/src"}