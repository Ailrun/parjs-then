{"version":3,"sources":["implementation/combinators/backtrack/backtrack.ts"],"names":[],"mappings":";;AAAA,+CAAiD;AAGjD;;GAEG;AACH;IAAkC,wCAAW;IAIzC,sBAAoB,KAAuB;QAA3C,YACI,iBAAO,SAGV;QAJmB,WAAK,GAAL,KAAK,CAAkB;QAH3C,iBAAW,GAAG,WAAW,CAAC;QAKtB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;;IACrC,CAAC;IAED,6BAAM,GAAN,UAAO,EAAiB;QACf,IAAA,kBAAK,CAAS;QACd,IAAA,sBAAQ,CAAO;QACpB,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,mCAAmC;YACnC,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC;QACD,qCAAqC;IACzC,CAAC;IACL,mBAAC;AAAD,CApBA,AAoBC,CApBiC,oBAAW,GAoB5C;AApBY,oCAAY","file":"backtrack.js","sourcesContent":["import {ParjsAction} from \"../../../base/action\";\r\nimport {ParsingState} from \"../../../abstract/basics/state\";\r\nimport {AnyParserAction} from \"../../../abstract/basics/action\";\r\n/**\r\n * Created by User on 21-Nov-16.\r\n */\r\nexport class PrsBacktrack extends ParjsAction {\r\n    displayName = \"backtrack\";\r\n    isLoud : boolean;\r\n    expecting : string;\r\n    constructor(private inner : AnyParserAction) {\r\n        super();\r\n        this.isLoud = inner.isLoud;\r\n        this.expecting = inner.expecting;\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {inner} = this;\r\n        let {position} = ps;\r\n        inner.apply(ps);\r\n        if (ps.isOk) {\r\n            //if inner succeeded, we backtrack.\r\n            ps.position = position;\r\n        }\r\n        //whatever code ps had, we return it.\r\n    }\r\n}"],"sourceRoot":"/src"}