{"version":3,"sources":["implementation/combinators/state/with-state.ts"],"names":[],"mappings":";;AAAA,+CAAiD;AAGjD;;GAEG;AACH;IAAkC,wCAAW;IAIzC,sBAAqB,KAAuB,EAAU,OAA4C;QAAlG,YACI,iBAAO,SAGV;QAJoB,WAAK,GAAL,KAAK,CAAkB;QAAU,aAAO,GAAP,OAAO,CAAqC;QAFlG,iBAAW,GAAG,WAAW,CAAC;QAItB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;;IACrC,CAAC;IAED,6BAAM,GAAN,UAAO,EAAiB;QAChB,IAAA,SAAuB,EAAtB,gBAAK,EAAE,oBAAO,CAAS;QAC5B,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IACL,mBAAC;AAAD,CAlBA,AAkBC,CAlBiC,oBAAW,GAkB5C;AAlBY,oCAAY","file":"with-state.js","sourcesContent":["import {ParjsAction} from \"../../../base/action\";\r\nimport {ParsingState} from \"../../../abstract/basics/state\";\r\nimport {AnyParserAction} from \"../../../abstract/basics/action\";\r\n/**\r\n * Created by User on 21-Nov-16.\r\n */\r\nexport class PrsWithState extends ParjsAction{\r\n    isLoud : boolean;\r\n    displayName = \"withState\";\r\n    expecting : string;\r\n    constructor (private inner : AnyParserAction, private reducer : (state : any, result : any) => any) {\r\n        super();\r\n        this.isLoud = inner.isLoud;\r\n        this.expecting = inner.expecting;\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {inner, reducer} = this;\r\n        inner.apply(ps);\r\n        if (!ps.isOk) {\r\n            return;\r\n        }\r\n        ps.state = reducer(ps.state, ps.value);\r\n    }\r\n}"],"sourceRoot":"/src"}