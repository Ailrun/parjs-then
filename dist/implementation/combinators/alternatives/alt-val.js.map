{"version":3,"sources":["implementation/combinators/alternatives/alt-val.ts"],"names":[],"mappings":";;AAAA,iDAAiD;AACjD,yCAAiD;AAGjD,4DAA0D;AAC1D;;GAEG;AAEH,eAAuB,SAAQ,oBAAW;IAItC,YAAqB,KAAuB,EAAU,GAAS;QAC3D,KAAK,EAAE,CAAC;QADS,UAAK,GAAL,KAAK,CAAkB;QAAU,QAAG,GAAH,GAAG,CAAM;QAH/D,gBAAW,GAAG,QAAQ,CAAC;QACvB,WAAM,GAAG,IAAI,CAAC;QAIV,KAAK,CAAC,MAAM,IAAI,eAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,SAAS,GAAG,GAAG,KAAK,CAAC,SAAS,cAAc,CAAC;IACtD,CAAC;IAED,MAAM,CAAC,EAAiB;QACpB,IAAI,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,IAAI,CAAC;QACxB,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,iDAAiD;YACjD,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;YACf,EAAE,CAAC,IAAI,GAAG,kBAAS,CAAC,EAAE,CAAC;QAC3B,CAAC;QACD,yCAAyC;IAC7C,CAAC;CACJ;AApBD,8BAoBC","file":"alt-val.js","sourcesContent":["import {ParjsAction} from \"../../../base/action\";\r\nimport {Issues, FAIL_RESULT} from \"../../common\";\r\nimport {AnyParserAction} from \"../../../abstract/basics/action\";\r\nimport {ParsingState} from \"../../../abstract/basics/state\";\r\nimport {ReplyKind} from \"../../../abstract/basics/result\";\r\n/**\r\n * Created by lifeg on 23/11/2016.\r\n */\r\n\r\nexport class PrsAltVal extends ParjsAction {\r\n    displayName = \"altVal\";\r\n    isLoud = true;\r\n    expecting : string;\r\n    constructor (private inner : AnyParserAction, private val : any) {\r\n        super();\r\n        inner.isLoud || Issues.quietParserNotPermitted(this);\r\n        this.expecting = `${inner.expecting} or anything`;\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {inner, val} = this;\r\n        inner.apply(ps);\r\n        if (ps.isSoft) {\r\n            //on soft failure, set the value and result to OK\r\n            ps.value = val;\r\n            ps.kind = ReplyKind.OK;\r\n        }\r\n        //on ok/hard/fatal, propagate the result.\r\n    }\r\n}"],"sourceRoot":"/src"}