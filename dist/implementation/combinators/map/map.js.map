{"version":3,"sources":["implementation/combinators/map/map.ts"],"names":[],"mappings":";;AAAA,iDAAiD;AAGjD;;GAEG;AACH,eAAuB,SAAQ,oBAAW;IAItC,YAAoB,KAAmB,EAAU,GAA+B;QAC5E,KAAK,EAAE,CAAC;QADQ,UAAK,GAAL,KAAK,CAAc;QAAU,QAAG,GAAH,GAAG,CAA4B;QAHhF,gBAAW,GAAG,KAAK,CAAC;QACpB,WAAM,GAAG,IAAI,CAAC;QAIV,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,EAAiB;QACpB,IAAI,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,IAAI,CAAC;QACxB,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;CACJ;AAjBD,8BAiBC","file":"map.js","sourcesContent":["import {ParjsAction} from \"../../../base/action\";\r\nimport {QUIET_RESULT, Issues} from \"../../common\";\r\nimport {ParsingState} from \"../../../abstract/basics/state\";\r\n/**\r\n * Created by User on 21-Nov-16.\r\n */\r\nexport class MapParser extends ParjsAction {\r\n    displayName = \"map\";\r\n    isLoud = true;\r\n    expecting : string;\r\n    constructor(private inner : ParjsAction, private map : (x : any, y : any) => any) {\r\n        super();\r\n        this.expecting = inner.expecting;\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {inner, map} = this;\r\n        inner.apply(ps);\r\n        if (!ps.isOk) {\r\n            return;\r\n        }\r\n        ps.value = map(ps.value, ps.state);\r\n    }\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":"/src"}