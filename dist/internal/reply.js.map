{"version":3,"sources":["internal/reply.ts"],"names":[],"mappings":";;AAAA;;GAEG,CAAC,MAAM;AACV,wDAAuD;AACvD,oCAAmC;AAmBnC;;GAEG;AACH;IAEI,YAAmB,KAAS;QAAT,UAAK,GAAL,KAAK,CAAI;QAD5B,SAAI,GAAG,iBAAS,CAAC,EAAE,CAAC;IAGpB,CAAC;IAED,OAAO;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,QAAQ;QACJ,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CACJ;AAbD,oCAaC;AAED;;GAEG;AACH;IACI,YAAmB,IAAqB,EAAS,KAAa;QAA3C,SAAI,GAAJ,IAAI,CAAiB;QAAS,UAAK,GAAL,KAAK,CAAQ;IAE9D,CAAC;IACD,OAAO;QACH,MAAM,IAAI,qCAAmB,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;CACJ;AAPD,oCAOC","file":"reply.js","sourcesContent":["/**\r\n * @module parjs/internal\r\n */ /** */\r\nimport {ParsingFailureError} from \"../parsing-failure\";\r\nimport {ReplyKind} from \"../reply\";\r\n\r\n/**\r\n * An object indicating trace information about the state of parsing when it was stopped.\r\n */\r\nexport interface Trace {\r\n    state : object;\r\n    position : number;\r\n    expecting : string;\r\n}\r\n\r\n/**\r\n * Used to maintain common members between SuccessReply, FailureReply, and other reply types.\r\n */\r\nexport interface AnyReply<T> {\r\n    kind : ReplyKind;\r\n    resolve() : T;\r\n}\r\n\r\n/**\r\n * Indicates a success reply and contains the value and other information.\r\n */\r\nexport class SuccessReply<T> implements AnyReply<T>{\r\n    kind = ReplyKind.OK;\r\n    constructor(public value : T){\r\n\r\n    }\r\n\r\n    resolve() : T {\r\n        return this.value;\r\n    }\r\n\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\n/**\r\n * Indicates a failure reply and contains information about the failure.\r\n */\r\nexport class FailureReply implements AnyReply<void> {\r\n    constructor(public kind : ReplyKind.Fail, public trace : Trace) {\r\n\r\n    }\r\n    resolve() : never {\r\n        throw new ParsingFailureError(this);\r\n    }\r\n}\r\n\r\n"],"sourceRoot":"/src"}