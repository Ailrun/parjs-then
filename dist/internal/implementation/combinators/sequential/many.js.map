{"version":3,"sources":["internal/implementation/combinators/sequential/many.ts"],"names":[],"mappings":";;AAAA;;GAEG,CAAC,MAAM;AACV,yCAAyC;AAEzC,yCAAoC;AAGpC,6CAA4C;AAC5C,qDAAqD;AACrD;;GAEG;AACH,aAAqB,SAAQ,oBAAW;IAIpC,YAAoB,KAAuB,EAAU,aAAsB,EAAU,YAAqB;QACtG,KAAK,EAAE,CAAC;QADQ,UAAK,GAAL,KAAK,CAAkB;QAAU,kBAAa,GAAb,aAAa,CAAS;QAAU,iBAAY,GAAZ,YAAY,CAAS;QAEtG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACjC,aAAa,IAAI,YAAY,IAAI,eAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC;IAED,MAAM,CAAC,EAAiB;QACpB,IAAI,EAAC,KAAK,EAAE,aAAa,EAAE,YAAY,EAAC,GAAG,IAAI,CAAC;QAChD,IAAI,EAAC,QAAQ,EAAC,GAAG,EAAE,CAAC;QACpB,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,IAAI,EAAE,CAAC;YACV,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAChB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;gBAAC,KAAK,CAAC;YACpB,EAAE,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC;gBAAC,KAAK,CAAC;YAC9B,EAAE,CAAC,CAAC,aAAa,KAAK,QAAQ,IAAI,EAAE,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACzD,eAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;YAC5C,CAAC;YACD,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;YACvB,sBAAY,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;YACtC,CAAC,EAAE,CAAC;QACR,CAAC;QACD,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,iBAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,iBAAS,CAAC,QAAQ,GAAG,iBAAS,CAAC,QAAQ,CAAC;YAC5D,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;QACf,gCAAgC;QAChC,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACvB,EAAE,CAAC,IAAI,GAAG,iBAAS,CAAC,EAAE,CAAC;IAC3B,CAAC;CACJ;AAvCD,0BAuCC","file":"many.js","sourcesContent":["/**\r\n * @module parjs/internal/implementation/combinators\r\n */ /** */\r\nimport {ParjsAction} from \"../../action\";\r\nimport {QUIET_RESULT} from \"../../special-results\";\r\nimport {Issues} from '../../issues';\r\nimport {AnyParserAction} from \"../../../action\";\r\nimport {ParsingState} from \"../../state\";\r\nimport {ReplyKind} from \"../../../../reply\";\r\nimport {ArrayHelpers} from \"../../functions/helpers\";\r\n/**\r\n * Created by User on 21-Nov-16.\r\n */\r\nexport class PrsMany extends ParjsAction {\r\n    isLoud : boolean;\r\n\r\n    expecting : string;\r\n    constructor(private inner : AnyParserAction, private maxIterations : number, private minSuccesses : number) {\r\n        super();\r\n        this.isLoud = inner.isLoud;\r\n        this.expecting = inner.expecting;\r\n        maxIterations >= minSuccesses || Issues.willAlwaysFail(\"many\");\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {inner, maxIterations, minSuccesses} = this;\r\n        let {position} = ps;\r\n        let arr = [];\r\n        let i = 0;\r\n        while (true) {\r\n            inner.apply(ps);\r\n            if (!ps.isOk) break;\r\n            if (i >= maxIterations) break;\r\n            if (maxIterations === Infinity && ps.position === position) {\r\n                Issues.guardAgainstInfiniteLoop(\"many\");\r\n            }\r\n            position = ps.position;\r\n            ArrayHelpers.maybePush(arr, ps.value);\r\n            i++;\r\n        }\r\n        if (ps.atLeast(ReplyKind.HardFail)) {\r\n            return;\r\n        }\r\n        if (i < minSuccesses) {\r\n            ps.kind = i === 0 ? ReplyKind.SoftFail : ReplyKind.HardFail;\r\n            return;\r\n        }\r\n        ps.value = arr;\r\n        //recover from the last failure.\r\n        ps.position = position;\r\n        ps.kind = ReplyKind.OK;\r\n    }\r\n}"],"sourceRoot":"/src"}