{"version":3,"sources":["internal/implementation/combinators/invariant/require.ts"],"names":[],"mappings":";;AAAA;;GAEG,CAAC,MAAM;AACV,yCAAyC;AAGzC,6CAA4C;AAE5C;;GAEG;AACH,aAAqB,SAAQ,oBAAW;IAGpC,YACY,KAAuB,EACvB,WAAoD,EACpD,QAAQ,EACR,WAAW;QAEnB,KAAK,EAAE,CAAC;QALA,UAAK,GAAL,KAAK,CAAkB;QACvB,gBAAW,GAAX,WAAW,CAAyC;QACpD,aAAQ,GAAR,QAAQ,CAAA;QACR,gBAAW,GAAX,WAAW,CAAA;QAGnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,mBAAmB,KAAK,CAAC,WAAW,iCAAiC,WAAW,EAAE,CAAC;IACxG,CAAC;IAED,MAAM,CAAC,EAAiB;QACpB,IAAI,EAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC;QAC1C,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACX,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,iBAAS,CAAC,EAAE,GAAG,QAAQ,CAAC;IACxE,CAAC;CACJ;AAtBD,0BAsBC","file":"require.js","sourcesContent":["/**\r\n * @module parjs/internal/implementation/combinators\r\n */ /** */\r\nimport {ParjsAction} from \"../../action\";\r\nimport {Issues} from \"../../issues\";\r\nimport {ParsingState} from \"../../state\";\r\nimport {ReplyKind} from \"../../../../reply\";\r\nimport {AnyParserAction} from \"../../../action\";\r\n/**\r\n * Created by User on 21-Nov-16.\r\n */\r\nexport class PrsMust extends ParjsAction {\r\n    isLoud : boolean;\r\n    expecting : string;\r\n    constructor(\r\n        private inner : AnyParserAction,\r\n        private requirement : (result : any, state : any) => boolean,\r\n        private failType,\r\n        private qualityName\r\n    ) {\r\n        super();\r\n        this.isLoud = inner.isLoud;\r\n        this.expecting = `intenral parser ${inner.displayName} yielding a result satisfying ${qualityName}`;\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {inner, requirement, failType} = this;\r\n        inner.apply(ps);\r\n        if (!ps.isOk) {\r\n            return;\r\n        }\r\n        ps.kind = requirement(ps.value, ps.state) ? ReplyKind.OK : failType;\r\n    }\r\n}"],"sourceRoot":"/src"}