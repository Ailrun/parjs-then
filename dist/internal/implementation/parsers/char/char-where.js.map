{"version":3,"sources":["internal/implementation/parsers/char/char-where.ts"],"names":[],"mappings":";;AAAA;;GAEG,CAAC,MAAM;AACV,yCAA2D;AAE3D,6CAA4C;AAC5C;;GAEG;AACH,kBAA0B,SAAQ,yBAAgB;IAI9C,YAAoB,SAAsC,EAAE,YAAqB,iBAAiB;QAC9F,KAAK,EAAE,CAAC;QADQ,cAAS,GAAT,SAAS,CAA6B;QAF1D,WAAM,GAAG,IAAI,CAAC;QAIV,IAAI,CAAC,SAAS,GAAG,oBAAoB,SAAS,EAAE,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,EAAiB;QACpB,IAAI,EAAC,SAAS,EAAC,GAAG,IAAI,CAAC;QACvB,IAAI,EAAC,QAAQ,EAAE,KAAK,EAAC,GAAG,EAAE,CAAC;QAC3B,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,IAAI,GAAG,iBAAS,CAAC,QAAQ,CAAC;YAC7B,MAAM,CAAC;QACX,CAAC;QACD,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC9B,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,IAAI,GAAI,iBAAS,CAAC,QAAQ,CAAC;YAC9B,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC;QACnB,EAAE,CAAC,QAAQ,EAAE,CAAC;QACd,EAAE,CAAC,IAAI,GAAG,iBAAS,CAAC,EAAE,CAAC;IAC3B,CAAC;CACJ;AAzBD,oCAyBC","file":"char-where.js","sourcesContent":["/**\r\n * @module parjs/internal/implementation/parsers\r\n */ /** */\r\nimport {ParjsAction, ParjsBasicAction} from \"../../action\";\r\nimport {ParsingState} from \"../../state\";\r\nimport {ReplyKind} from \"../../../../reply\";\r\n/**\r\n * Created by User on 21-Nov-16.\r\n */\r\nexport class PrsCharWhere extends ParjsBasicAction {\r\n\r\n    isLoud = true;\r\n    expecting : string;\r\n    constructor(private predicate : (char : string) => boolean, expecting : string = \"(some property)\") {\r\n        super();\r\n        this.expecting = `a char matching: ${expecting}`;\r\n    }\r\n\r\n    _apply(ps : ParsingState) {\r\n        let {predicate} = this;\r\n        let {position, input} = ps;\r\n        if (position >= input.length) {\r\n            ps.kind = ReplyKind.SoftFail;\r\n            return;\r\n        }\r\n        let curChar = input[position];\r\n        if (!predicate(curChar)) {\r\n            ps.kind =  ReplyKind.SoftFail;\r\n            return;\r\n        }\r\n        ps.value = curChar;\r\n        ps.position++;\r\n        ps.kind = ReplyKind.OK;\r\n    }\r\n}\r\n"],"sourceRoot":"/src"}