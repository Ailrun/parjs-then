{"version":3,"sources":["internal/static.ts"],"names":[],"mappings":"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","file":"static.js","sourcesContent":["/**\r\n * @module parjs/internal\r\n */ /** */\r\nimport {ParjsParser} from \"./instance\";\r\nimport {PrsCharWhere, PrsResult, PrsEof, PrsFail, PrsNewline, PrsString, PrsStringLen, PrsRest, AnyStringOf, PrsRegexp, PrsPosition, PrsState } from './implementation/parsers';\r\nimport {PrsAlts, PrsSeq} from './implementation/combinators';\r\nimport {ParjsAction} from \"./implementation/action\";\r\nimport {Chars} from \"./implementation/functions/char-indicators\";\r\nimport {AnyParser} from \"../any\";\r\nimport {ReplyKind} from \"../reply\";\r\nimport {IntOptions, PrsInt} from \"./implementation/parsers/numbers/int\";\r\nimport {FloatOptions, PrsFloat} from \"./implementation/parsers/numbers/float\";\r\nimport {assert} from 'chai';\r\nimport _ = require('lodash');\r\nimport {Issues} from \"./implementation/common\";\r\nimport {PrsLate} from \"./implementation/combinators/special/late\";\r\nimport {LoudParser} from \"../loud\";\r\nimport {ParjsStatic} from \"../parjs\";\r\n/**\r\n * Created by lifeg on 24/11/2016.\r\n */\r\n\r\nfunction wrap(action : ParjsAction) {\r\n    return new ParjsParser(action);\r\n}\r\n\r\n\r\nexport class ParjsParsers implements ParjsStatic {\r\n    get spaces1() {\r\n        return this.space.many(1).str.withName(\"spaces1\");\r\n    }\r\n\r\n    late<T>(resolver : () => LoudParser<T>) : LoudParser<T> {\r\n        return wrap(new PrsLate(() => resolver().action, true)).withName(\"late\");\r\n    }\r\n\r\n    get asciiLetter() {\r\n        return this.charWhere(Chars.isAsciiLetter).withName(\"asciiLetter\")\r\n    }\r\n\r\n\r\n    any(...parsers : AnyParser[]) {\r\n        return wrap(new PrsAlts(parsers.map(x => x.action))).withName(\"any\");\r\n    }\r\n\r\n    seq(...parsers : AnyParser[]) {\r\n        return wrap(new PrsSeq(parsers.map(x => x.action))).withName(\"seq\");\r\n    }\r\n\r\n    get anyChar() {\r\n        return wrap(new PrsStringLen(1)).withName(\"anyChar\");\r\n    }\r\n\r\n    charWhere(predicate : (char : string) => boolean, property ?: string) {\r\n        return wrap(new PrsCharWhere(predicate, property)).withName(`charWhere`);\r\n    }\r\n\r\n    anyCharOf(options : string) {\r\n        return this.charWhere(x => options.includes(x), `any of ${options}`).withName(\"anyCharOf\");\r\n    }\r\n\r\n    noCharOf(options : string) {\r\n        return this.charWhere(x => !options.includes(x)).withName(\"noCharOf\");\r\n    }\r\n\r\n    get digit() {\r\n        return this.charWhere(Chars.isDigit).withName(\"digit\");\r\n    }\r\n\r\n    get hex() {\r\n        return this.charWhere(Chars.isHex).withName(\"hex\");\r\n    }\r\n\r\n    get asciiLower() {\r\n        return this.charWhere(Chars.isAsciiLower).withName(\"asciiLower\");\r\n    }\r\n\r\n    get asciiUpper() {\r\n        return this.charWhere(Chars.isAsciiUpper).withName(\"asciiUpper\");\r\n    }\r\n\r\n    get newline() {\r\n        return wrap(new PrsNewline(false)).withName(\"newline\");\r\n    }\r\n\r\n    get unicodeNewline() {\r\n        return wrap(new PrsNewline(true)).withName(\"unicodeNewline\");\r\n    }\r\n\r\n    get space() {\r\n        return this.charWhere(Chars.isInlineSpace).withName(\"space\");\r\n    }\r\n\r\n    get unicodeSpace() {\r\n        return this.charWhere(Chars.isUnicodeInlineSpace).withName(\"unicodeSpace\");\r\n    }\r\n\r\n    get spaces() {\r\n        return this.space.many().str.withName(\"spaces\");\r\n    }\r\n\r\n    get unicodeSpaces() {\r\n        return this.unicodeSpace.many().str.withName(\"unicodeSpaces\");\r\n    }\r\n\r\n    get nop() {\r\n        return this.result(undefined).q.withName(\"nop\");\r\n    }\r\n\r\n    get rest() {\r\n        return wrap(new PrsRest()).withName(\"rest\");\r\n    }\r\n\r\n    string(str : string) {\r\n        return wrap(new PrsString(str)).withName(\"string\");\r\n    }\r\n\r\n    anyStringOf(...strs : string[]){\r\n        return wrap(new AnyStringOf(strs)).withName(\"anyStringOf\");\r\n    }\r\n\r\n    stringLen(length : number) {\r\n        return wrap(new PrsStringLen(length)).withName(\"stringLen\");\r\n    }\r\n\r\n    regexp(regex : RegExp) {\r\n        return wrap(new PrsRegexp(regex)).withName(\"regexp\");\r\n    }\r\n\r\n    result(x : any) {\r\n        return wrap(new PrsResult(x)).withName(\"result\");\r\n    }\r\n\r\n    get eof() {\r\n        return wrap(new PrsEof()).withName(\"eof\");\r\n    }\r\n\r\n    fail(expecting = \"\", kind : ReplyKind.Fail = ReplyKind.SoftFail) {\r\n        return wrap(new PrsFail(kind, expecting)).withName(\"fail\");\r\n    }\r\n\r\n    get position() {\r\n        return wrap (new PrsPosition()).withName(\"position\");\r\n    }\r\n\r\n    get state() {\r\n        return wrap(new PrsState()).withName(\"state\");\r\n    }\r\n\r\n    int(options ?: IntOptions) {\r\n        options = _.defaults({}, options, {\r\n            base: 10,\r\n            allowSign : true\r\n        });\r\n        return wrap(new PrsInt(options)).withName(\"int\");\r\n    }\r\n\r\n    float(options ?: FloatOptions) {\r\n        options = _.defaults({}, options, {\r\n            allowImplicitZero : true,\r\n            allowExponent : true,\r\n            allowSign : true,\r\n            allowFloatingPoint : true\r\n        } as FloatOptions);\r\n\r\n        return wrap(new PrsFloat(options)).withName(\"float\");\r\n    }\r\n}"],"sourceRoot":"/src"}