{"version":3,"sources":["functions/char-indicators.ts"],"names":[],"mappings":"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","file":"char-indicators.js","sourcesContent":["/**\r\n * Created by User on 24-Nov-16.\r\n */\r\n\r\nexport namespace Codes {\r\n    export const a = 'a'.charCodeAt(0);\r\n    export const f = 'f'.charCodeAt(0);\r\n    export const F = 'F'.charCodeAt(0);\r\n    export const z = 'z'.charCodeAt(0);\r\n    export const A = 'A'.charCodeAt(0);\r\n    export const Z = 'Z'.charCodeAt(0);\r\n    export const zero = '0'.charCodeAt(0);\r\n    export const nine = '9'.charCodeAt(0);\r\n    export const newline = '\\n'.charCodeAt(0);\r\n    export const carriageReturn = '\\r'.charCodeAt(0);\r\n    export const space = 0x0020;\r\n    export const tab = 0x0008;\r\n    export const minus = '-'.charCodeAt(0);\r\n    export const plus = '+'.charCodeAt(0);\r\n    export const decimalPoint = \".\".charCodeAt(0);\r\n    export const e = a + 4;\r\n    export const E = A + 4;\r\n    export const enQuad = 0x2000;\r\n    const inlineSpaces = [0x0020, 0x0009];\r\n    const mixedUnicodeInlineSpaces = [0x0009, 0x0020, 0x00a0, 0x1680, 0x180e, 0x0009, 0x202f, 0x205f, 0x3000];\r\n    let unicodeNewlines = [0x0085, 0x2028, 0x2029];\r\n    export const hairSpace = 0x200a;\r\n\r\n    export function isUnicodeInlineSpace(code : number) {\r\n        return isBetween(code, enQuad, hairSpace) || mixedUnicodeInlineSpaces.includes(code);\r\n    }\r\n\r\n    export function isInlineSpace(code : number) {\r\n        return inlineSpaces.includes(code);\r\n    }\r\n\r\n    export function isArithmeticSign(code : number) {\r\n        return code === minus || code == plus;\r\n    }\r\n\r\n    export function isBetween(code : number, start : number, end : number) {\r\n        return code >= start && code <= end;\r\n    }\r\n\r\n    export function isDigit(code : number, base = 10) {\r\n        if (base <= 10) {\r\n            return isBetween(code, zero, zero + base - 1)\r\n        }\r\n        if (base <= 37) {\r\n            return isBetween(code, zero, nine) || isBetween(code, a, a + base - 11) || isBetween(code, A, A + base - 11);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    export function digitValue(code : number) {\r\n        if (isBetween(code, zero, nine)) {\r\n            return code - zero;\r\n        }\r\n        if (isBetween(code, a, z)) {\r\n            return 10 + code - a;\r\n        }\r\n        if (isBetween(code, A, Z)) {\r\n            return 10 + code - A;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    export function isHex(code : number) {\r\n        return isBetween(code, zero, nine) || isBetween(code, a, f) || isBetween(code, A, F);\r\n    }\r\n\r\n    export function isAsciiLower(code : number) {\r\n        return isBetween(code, a, z);\r\n    }\r\n\r\n    export function isAsciiUpper(code : number) {\r\n        return isBetween(code, A, Z);\r\n    }\r\n\r\n    export function isAsciiLetter(code : number) {\r\n        return isAsciiLower(code) || isAsciiUpper(code);\r\n    }\r\n\r\n    export function isUnicodeNewline(s : number) {\r\n        return unicodeNewlines.includes(s);\r\n    }\r\n}\r\n\r\nexport namespace Chars {\r\n    export function isUpper(s : string) {\r\n        return s.toUpperCase() === s;\r\n    }\r\n\r\n    export function isLower(s : string) {\r\n        return s.toLowerCase() === s;\r\n    }\r\n\r\n    export function isDigit(s : string) : boolean {\r\n        let code = s.charCodeAt(0);\r\n        return Codes.isDigit(code);\r\n    }\r\n\r\n    export function isAsciiLetter(s : string) {\r\n        return Codes.isAsciiLetter(s.charCodeAt(0));\r\n    }\r\n\r\n    export function isHex(s : string) : boolean {\r\n        let code = s.charCodeAt(0);\r\n        return Codes.isHex(code);\r\n    }\r\n\r\n    export function isAsciiLower(s : string) {\r\n        return Codes.isAsciiLower(s.charCodeAt(0))\r\n    }\r\n\r\n    export function isTab(s : string) {\r\n        let code = s.charCodeAt(0);\r\n        return code === Codes.tab;\r\n    }\r\n\r\n    export function isSpace(s : string) {\r\n        let code = s.charCodeAt(0);\r\n        return code === Codes.space;\r\n    }\r\n\r\n\r\n    export function isInlineSpace(s : string) {\r\n        let code = s.charCodeAt(0);\r\n        return Codes.isInlineSpace(code);\r\n    }\r\n\r\n\r\n\r\n    export function isUnicodeInlineSpace(s : string) {\r\n        let code = s.charCodeAt(0);\r\n        return Codes.isUnicodeInlineSpace(code);\r\n    }\r\n\r\n    //range: 0x2000 - 0x200a\r\n    export function isAsciiUpper(s : string) {\r\n        let code = s.charCodeAt(0);\r\n       return Codes.isAsciiUpper(code);\r\n    }\r\n\r\n\r\n\r\n}"],"sourceRoot":"/src"}