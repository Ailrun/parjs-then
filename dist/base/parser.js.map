{"version":3,"sources":["base/parser.ts"],"names":[],"mappings":";AAAA,qDAA2E;AAC3E,qCAAwD;AACxD,sDAAqG;AACrG,4BAA6B;AAC7B;;GAEG;AAEH;CAEC;AAED;;GAEG;AACH;IACI,YAAmB,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;IAAG,CAAC;IAE3C,IAAI,WAAW;QACX,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC;IACnC,CAAC;IAED,IAAI,WAAW,CAAC,IAAI;QAChB,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,KAAK,CAAC,KAAc,EAAE,YAAmB;QACrC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,mCAAmC;YACnC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,EAAC,MAAM,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC;QAC5B,IAAI,EAAE,GAAG,IAAI,0BAAiB,CAAC,KAAK,CAAC,CAAC;QACtC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,WAAW,EAAE,EAAE,YAAY,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAEjB,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,IAAI,GAAG,mBAAU,CAAC,QAAQ,CAAC;gBAC9B,EAAE,CAAC,SAAS,GAAG,yBAAyB,CAAC;YAC7C,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,mBAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACjC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC1C,CAAC;QACD,IAAI,GAAsB,CAAC;QAC3B,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,mBAAU,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,sBAAa,CAAC,EAAE,CAAC,KAAK,KAAK,qBAAY,GAAG,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;QAC7F,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,mBAAU,CAAC,EAAE,CAAC,IAAI,EAAE;gBAC3B,KAAK,EAAE,EAAE,CAAC,KAAK;gBACf,QAAQ,EAAE,EAAE,CAAC,QAAQ;gBACrB,SAAS,EAAE,EAAE,CAAC,SAAS;aAC1B,CAAC,CAAC;QAEP,CAAC;IACL,CAAC;IAED,IAAI,MAAM;QACN,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC9B,CAAC;CAEJ;AAhDD,0CAgDC","file":"parser.js","sourcesContent":["import {QUIET_RESULT, FAIL_RESULT, Issues} from \"../implementation/common\";\r\nimport {ParjsAction, BasicParsingState} from \"./action\";\r\nimport {ResultKind, ParserResult, SuccessResult, FailResult, Trace} from \"../abstract/basics/result\";\r\nimport _ = require('lodash');\r\n/**\r\n * Created by User on 22-Nov-16.\r\n */\r\n\r\nclass ParserState {\r\n\r\n}\r\n\r\n/**\r\n * The base Parjs parser class, which supports only basic parsing operations. Should not be used in user code.\r\n */\r\nexport abstract class BaseParjsParser {\r\n    constructor(public action : ParjsAction) {}\r\n\r\n    get displayName() : string   {\r\n        return this.action.displayName;\r\n    }\r\n\r\n    set displayName(name) {\r\n        this.action.displayName = name;\r\n    }\r\n\r\n    parse(input : string, initialState ?: any) : ParserResult<any> {\r\n        if (typeof input !== \"string\") {\r\n            //catches input === undefined, null\r\n            throw new Error(\"input must be a valid string\");\r\n        }\r\n        let {action, isLoud} = this;\r\n        let ps = new BasicParsingState(input);\r\n        ps.state = _.defaults(new ParserState(), initialState);\r\n        action.apply(ps);\r\n\r\n        if (ps.isOk) {\r\n            if (ps.position !== input.length) {\r\n                ps.kind = ResultKind.SoftFail;\r\n                ps.expecting = \"unexpected end of input\";\r\n            }\r\n        }\r\n        if (ps.kind === ResultKind.Unknown) {\r\n            throw new Error(\"should not happen.\");\r\n        }\r\n        let ret: ParserResult<any>;\r\n        if (ps.kind === ResultKind.OK) {\r\n            return Object.assign(new SuccessResult(ps.value === QUIET_RESULT ? undefined : ps.value))\r\n        }\r\n        else {\r\n            return new FailResult(ps.kind, {\r\n                state: ps.state,\r\n                position: ps.position,\r\n                expecting: ps.expecting\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    get isLoud() {\r\n        return this.action.isLoud;\r\n    }\r\n\r\n}"],"sourceRoot":"/src"}